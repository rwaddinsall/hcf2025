---
// Lineup component for Hopkins Creek Festival
interface ArtistData {
  name: string;
  annotation?: string; // [live], [GER], [UK], etc.
  size?: 'small' | 'medium' | 'large' | 'xl';
}

const artists: ArtistData[] = [
  { name: 'Aarti Jadu', annotation: 'live', size: 'medium' },
  { name: 'Alex Albrecht', annotation: 'live', size: 'medium' },
  { name: 'Babyxann', size: 'medium' },
  { name: 'Birdsnake', size: 'small' },
  { name: 'Bumpy', size: 'small' },
  { name: 'C.R.A.I.G', size: 'medium' },
  { name: 'Casey', size: 'small' },
  { name: 'Castro Nemo', annotation: 'GER', size: 'small' },
  { name: 'Chuleo Club', size: 'medium' },
  { name: 'College of Knowledge', size: 'large' },
  { name: 'Cousin', annotation: 'live', size: 'medium' },
  { name: 'Darcy Justice', size: 'medium' },
  { name: 'DITA', annotation: 'LDN', size: 'small' },
  { name: 'DJ Kiti', size: 'small' },
  { name: 'DJ No More', size: 'medium' },
  { name: 'DJ Shio', size: 'small' },
  { name: 'Dreems', size: 'medium' },
  { name: 'Earl Grey', size: 'medium' },
  { name: 'Emelyne', size: 'medium' },
  { name: 'Ewan Saturdy', size: 'medium' },
  { name: 'Folarin', size: 'medium' },
  { name: 'Handclap', annotation: 'live', size: 'medium' },
  { name: 'Hooks Lines and Sinker', size: 'large' },
  { name: 'Intermodd', size: 'medium' },
  { name: 'JEEP Sessions', size: 'medium' },
  { name: 'Katie Pearson', size: 'medium' },
  { name: 'Keanu Nelson', size: 'medium' },
  { name: 'Low Flung', annotation: 'live', size: 'medium' },
  { name: 'Lunacy', size: 'medium' },
  { name: 'Magda B', size: 'small' },
  { name: 'Maria Moles', annotation: 'live', size: 'medium' },
  { name: 'Miki', size: 'small' },
  { name: 'Milou Moon', size: 'medium' },
  { name: 'MiNNA', annotation: 'UK', size: 'small' },
  { name: 'Mitsuki', annotation: 'JAP', size: 'small' },
  { name: 'Myles Mac DJ Possum', size: 'large' },
  { name: 'Noise In My Head', size: 'medium' },
  { name: 'NÅ«', annotation: 'live', size: 'small' },
  { name: 'Nuestra Planeta', size: 'medium' },
  { name: 'Ones', size: 'small' },
  { name: 'Optimo', annotation: 'SCT', size: 'medium' },
  { name: 'Our Carlson', size: 'medium' },
  { name: 'Owelu Dreamhouse', size: 'large' },
  { name: 'Quality Used Cars', size: 'large' },
  { name: 'R.Ribiero', size: 'small' },
  { name: 'Ryan Berkeley', annotation: 'live', size: 'medium' },
  { name: 'San Of The Rambutan', size: 'large' },
  { name: 'Seen.Touch', size: 'medium' },
  { name: 'Setwun', size: 'medium' },
  { name: 'Sleep D Live', annotation: 'live', size: 'medium' },
  { name: 'Timepoor', size: 'medium' },
  { name: 'Walter Majik', size: 'medium' },
  { name: 'Wax Nomads', size: 'xl' },
];
---

<section class="px-6 py-16">
  <div class="max-w-6xl mx-auto">
    <h2 class="mb-12 text-center md:text-5xl">Who's Playing?</h2>

    <div class="lineup-grid">
      {
        artists.map((artist) => (
          <div
            class={`artist-item ${artist.size || 'medium'}`}
            data-artist={artist.name}
          >
            <h2 class="artist-name">
              {artist.name}
              {artist.annotation && (
                <span class="artist-annotation">[{artist.annotation}]</span>
              )}
            </h2>
          </div>
        ))
      }
    </div>
  </div>
</section>

<style>
  .lineup-container {
  }

  .lineup-grid {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    max-width: 100%;
    text-align: center;
    gap: var(--space-s) var(--space-m);
  }

  .artist-item {
    position: relative;
    white-space: nowrap;
    text-align: center;
    opacity: 0;
    animation: fadeInUp 0.6s ease forwards;
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .lineup-grid:hover .artist-item {
    opacity: 0.6;
  }

  .lineup-grid:hover .artist-item:hover {
    opacity: 1;
    transform: translateY(var(--random-y, 0px)) scale(1.05);
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(calc(20px + var(--random-y, 0px)));
    }
    to {
      opacity: 1;
      transform: translateY(var(--random-y, 0px));
    }
  }

  .artist-name {
    font-weight: 600;

    margin: 0;
  }

  .artist-annotation {
    font-size: 0.8em;
    font-style: normal;
    font-weight: 300;
    margin-left: var(--space-3xs);
    opacity: 0.8;
  }

  /* All artists same size */
  .artist-item {
    /* Size will be inherited from h2 design system */
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .lineup-grid {
      gap: var(--space-xs) var(--space-s);
    }
  }

  @media (max-width: 480px) {
    .lineup-grid {
      gap: var(--space-2xs) var(--space-xs);
    }

    .artist-item {
      padding: var(--space-2xs) var(--space-xs);
    }
  }
</style>

<script>
  // Add subtle random positioning for organic layout
  document.addEventListener('DOMContentLoaded', () => {
    const artists = document.querySelectorAll('.artist-item');
    artists.forEach((artist, index) => {
      const element = artist as HTMLElement;

      // Add subtle random positioning for organic layout
      const randomY = (Math.random() - 0.5) * 8; // -4px to 4px
      element.style.setProperty('--random-y', `${randomY}px`);

      // Add staggered animation delay
      element.style.animationDelay = `${index * 0.05}s`;
    });
  });
</script>
