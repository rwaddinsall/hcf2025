---
/**
 * Hopkins Creek Header Component with Navigation
 *
 * @description A complete header component with sticky navigation
 * and enhanced UX features
 */
import Logo from "./Logo.astro";
import { Icon } from "astro-icon/components";
import { SkipLink } from "accessible-astro-components";
import ScrollingText from "./ScrollingText.astro";
---

<header class="hopkins-header">
  <SkipLink />
  <nav class="hopkins-nav" role="navigation" aria-label="Main navigation">
    <!-- Scrolling text positioned absolutely to start from container edge -->

    <div class="nav-container">
      <!-- Logo Section -->
      <div class="nav-brand"></div>
      <ScrollingText text="November 7 - 9. Tarrrarang, VIC" />

      <!-- Desktop Navigation -->
      <div class="nav-menu" id="nav-menu">
        <ul class="nav-list">
          <li class="nav-item">
            <a href="/" class="nav-link" aria-label="Go to homepage">
              <span>Home</span>
            </a>
          </li>
          <li class="nav-item">
            <a
              href="/program/"
              class="nav-link"
              aria-label="View festival program"
            >
              <span>Program</span>
            </a>
          </li>
          <li class="nav-item nav-dropdown" data-dropdown>
            <button
              class="nav-link dropdown-trigger"
              aria-expanded="false"
              aria-haspopup="true"
              aria-controls="info-dropdown"
              data-dropdown-trigger
            >
              <span>Info</span>
              <Icon
                name="lucide:chevron-down"
                class="dropdown-icon"
                size="16"
              />
            </button>
            <div class="dropdown-menu" id="info-dropdown" data-dropdown-menu>
              <div class="dropdown-content">
                <a href="/info/" class="dropdown-link">
                  <Icon name="lucide:info" size="16" />
                  <span>Festival Info</span>
                </a>
                <a href="/info/camping" class="dropdown-link">
                  <Icon name="lucide:tent" size="16" />
                  <span>Camping & Accommodation</span>
                </a>
                <a href="/info/motor-inn" class="dropdown-link">
                  <Icon name="lucide:bed" size="16" />
                  <span>The Motor Inn</span>
                </a>
                <a href="/info/accessibility" class="dropdown-link">
                  <Icon name="lucide:accessibility" size="16" />
                  <span>Accessibility</span>
                </a>
                <a href="/info/getting-there" class="dropdown-link">
                  <Icon name="lucide:map-pin" size="16" />
                  <span>Travel & Entry</span>
                </a>
                <a href="/info/food-beverages" class="dropdown-link">
                  <Icon name="lucide:utensils" size="16" />
                  <span>Food & Beverages</span>
                </a>
                <a href="/applications" class="dropdown-link">
                  <Icon name="lucide:file-text" size="16" />
                  <span>Applications</span>
                </a>
                <a href="/info/tickets" class="dropdown-link">
                  <Icon name="lucide:ticket" size="16" />
                  <span>Tickets</span>
                </a>
                <a href="/privacy-policy/" class="dropdown-link">
                  <Icon name="lucide:shield" size="16" />
                  <span>Privacy Policy</span>
                </a>
              </div>
            </div>
          </li>
          <li class="nav-item">
            <a
              href="#tickets"
              class="nav-link nav-cta"
              aria-label="Buy festival tickets"
            >
              <Icon name="lucide:ticket" size="16" />
              <span>Tickets</span>
            </a>
          </li>
          <li class="nav-item">
            <button
              class="nav-link theme-toggle"
              aria-label="Toggle dark mode"
              data-theme-toggle
            >
              <Icon
                name="lucide:sun"
                class="theme-icon theme-icon--light"
                size="20"
              />
              <Icon
                name="lucide:moon"
                class="theme-icon theme-icon--dark"
                size="20"
              />
            </button>
          </li>
        </ul>
      </div>

      <!-- Mobile Menu Toggle -->
      <button
        class="mobile-toggle"
        aria-expanded="false"
        aria-controls="nav-menu"
        aria-label="Toggle navigation menu"
        data-mobile-toggle
      >
        <span class="mobile-toggle-line"></span>
        <span class="mobile-toggle-line"></span>
        <span class="mobile-toggle-line"></span>
      </button>
    </div>

    <!-- Mobile Navigation Overlay -->
    <div class="mobile-overlay" data-mobile-overlay>
      <div class="mobile-menu">
        <div class="mobile-menu-header">
          <Logo />
          <button
            class="mobile-close"
            data-mobile-close
            aria-label="Close menu"
          >
            <Icon name="lucide:x" size="24" />
          </button>
        </div>
        <div class="mobile-menu-content">
          <a href="/" class="mobile-link">
            <Icon name="lucide:home" size="20" />
            <span>Home</span>
          </a>
          <a href="/program/" class="mobile-link">
            <Icon name="lucide:calendar" size="20" />
            <span>Program</span>
          </a>
          <div class="mobile-dropdown" data-mobile-dropdown>
            <button
              class="mobile-dropdown-trigger"
              data-mobile-dropdown-trigger
            >
              <Icon name="lucide:info" size="20" />
              <span>Info</span>
              <Icon
                name="lucide:chevron-down"
                class="mobile-dropdown-icon"
                size="16"
              />
            </button>
            <div class="mobile-dropdown-content" data-mobile-dropdown-content>
              <a href="/info/" class="mobile-dropdown-link">Festival Info</a>
              <a href="/info/camping" class="mobile-dropdown-link"
                >Camping & Accommodation</a
              >
              <a href="/info/motor-inn" class="mobile-dropdown-link"
                >The Motor Inn</a
              >
              <a href="/info/accessibility" class="mobile-dropdown-link"
                >Accessibility</a
              >
              <a href="/info/getting-there" class="mobile-dropdown-link"
                >Travel & Entry</a
              >
              <a href="/info/food-beverages" class="mobile-dropdown-link"
                >Food & Beverages</a
              >
              <a href="/applications" class="mobile-dropdown-link"
                >Applications</a
              >
              <a href="/info/tickets" class="mobile-dropdown-link">Tickets</a>
              <a href="/privacy-policy/" class="mobile-dropdown-link"
                >Privacy Policy</a
              >
            </div>
          </div>
          <a href="#tickets" class="mobile-link mobile-cta">
            <Icon name="lucide:ticket" size="20" />
            <span>Get Tickets</span>
          </a>
        </div>
      </div>
    </div>
  </nav>
</header>

<script>
  class HopkinsNavigation {
    private nav: HTMLElement;
    private mobileToggle: HTMLButtonElement;
    private mobileOverlay: HTMLElement;
    private dropdownTriggers: NodeListOf<HTMLButtonElement>;
    private themeToggle: HTMLButtonElement;
    private lastScrollY = 0;
    private isScrolling = false;

    constructor() {
      this.nav = document.querySelector(".hopkins-nav") as HTMLElement;
      this.mobileToggle = document.querySelector(
        "[data-mobile-toggle]"
      ) as HTMLButtonElement;
      this.mobileOverlay = document.querySelector(
        "[data-mobile-overlay]"
      ) as HTMLElement;
      this.dropdownTriggers = document.querySelectorAll(
        "[data-dropdown-trigger]"
      ) as NodeListOf<HTMLButtonElement>;
      this.themeToggle = document.querySelector(
        "[data-theme-toggle]"
      ) as HTMLButtonElement;

      this.init();
    }

    private init(): void {
      this.handleStickyScroll();
      this.setupMobileMenu();
      this.setupDropdowns();
      this.setupThemeToggle();
      this.setupKeyboardNavigation();
      this.setActiveMenuItem();

      // Event listeners
      window.addEventListener("scroll", this.handleScroll.bind(this), {
        passive: true,
      });
      window.addEventListener("resize", this.handleResize.bind(this), {
        passive: true,
      });
      document.addEventListener("click", this.handleOutsideClick.bind(this));
    }

    private handleScroll(): void {
      if (!this.isScrolling) {
        window.requestAnimationFrame(() => {
          this.handleStickyScroll();
          this.isScrolling = false;
        });
        this.isScrolling = true;
      }
    }

    private handleStickyScroll(): void {
      const currentScrollY = window.scrollY;

      if (currentScrollY > 20) {
        this.nav.classList.add("nav-scrolled");
      } else {
        this.nav.classList.remove("nav-scrolled");
      }

      // Close dropdowns when scrolling significantly
      if (Math.abs(currentScrollY - this.lastScrollY) > 50) {
        this.closeAllDropdowns();
      }

      this.lastScrollY = currentScrollY;
    }

    private setupMobileMenu(): void {
      const mobileClose = document.querySelector(
        "[data-mobile-close]"
      ) as HTMLButtonElement;

      this.mobileToggle.addEventListener("click", () => {
        this.toggleMobileMenu();
      });

      mobileClose.addEventListener("click", () => {
        this.closeMobileMenu();
      });

      // Mobile dropdown functionality
      const mobileDropdownTriggers = document.querySelectorAll(
        "[data-mobile-dropdown-trigger]"
      );
      mobileDropdownTriggers.forEach((trigger) => {
        trigger.addEventListener("click", () => {
          const dropdown = trigger.closest(
            "[data-mobile-dropdown]"
          ) as HTMLElement;
          dropdown.classList.toggle("active");
        });
      });
    }

    private setupDropdowns(): void {
      this.dropdownTriggers.forEach((trigger) => {
        trigger.addEventListener("click", (e) => {
          e.preventDefault();
          this.toggleDropdown(trigger);
        });

        trigger.addEventListener("keydown", (e) => {
          if (e.key === "Enter" || e.key === " ") {
            e.preventDefault();
            this.toggleDropdown(trigger);
          }
        });
      });
    }

    private setupThemeToggle(): void {
      if (this.themeToggle) {
        this.themeToggle.addEventListener("click", () => {
          document.documentElement.classList.toggle("darkmode");
          localStorage.setItem(
            "theme",
            document.documentElement.classList.contains("darkmode")
              ? "dark"
              : "light"
          );
        });

        // Initialize theme
        const savedTheme = localStorage.getItem("theme");
        const prefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)"
        ).matches;

        if (savedTheme === "dark" || (!savedTheme && prefersDark)) {
          document.documentElement.classList.add("darkmode");
        }
      }
    }

    private setupKeyboardNavigation(): void {
      document.addEventListener("keydown", (e) => {
        if (e.key === "Escape") {
          this.closeAllDropdowns();
          this.closeMobileMenu();
        }
      });
    }

    private toggleMobileMenu(): void {
      const isOpen = this.mobileOverlay.classList.contains("active");

      if (isOpen) {
        this.closeMobileMenu();
      } else {
        this.openMobileMenu();
      }
    }

    private openMobileMenu(): void {
      this.mobileOverlay.classList.add("active");
      this.mobileToggle.classList.add("active");
      this.mobileToggle.setAttribute("aria-expanded", "true");
      document.body.style.overflow = "hidden";
    }

    private closeMobileMenu(): void {
      this.mobileOverlay.classList.remove("active");
      this.mobileToggle.classList.remove("active");
      this.mobileToggle.setAttribute("aria-expanded", "false");
      document.body.style.overflow = "";
    }

    private toggleDropdown(trigger: HTMLButtonElement): void {
      const dropdown = trigger.closest("[data-dropdown]") as HTMLElement;
      const isOpen = dropdown.classList.contains("active");

      this.closeAllDropdowns();

      if (!isOpen) {
        this.openDropdown(dropdown, trigger);
      }
    }

    private openDropdown(
      dropdown: HTMLElement,
      trigger: HTMLButtonElement
    ): void {
      dropdown.classList.add("active");
      trigger.setAttribute("aria-expanded", "true");
    }

    private closeDropdown(dropdown: HTMLElement): void {
      const trigger = dropdown.querySelector(
        "[data-dropdown-trigger]"
      ) as HTMLButtonElement;
      dropdown.classList.remove("active");
      trigger.setAttribute("aria-expanded", "false");
    }

    private closeAllDropdowns(): void {
      const openDropdowns = document.querySelectorAll("[data-dropdown].active");
      openDropdowns.forEach((dropdown) => {
        this.closeDropdown(dropdown as HTMLElement);
      });
    }

    private handleOutsideClick(e: Event): void {
      const target = e.target as Element;

      // Close dropdowns if clicking outside
      if (!target.closest("[data-dropdown]")) {
        this.closeAllDropdowns();
      }

      // Close mobile menu if clicking on overlay
      if (target.classList.contains("mobile-overlay")) {
        this.closeMobileMenu();
      }
    }

    private handleResize(): void {
      if (window.innerWidth > 900) {
        this.closeMobileMenu();
      }
    }

    private setActiveMenuItem(): void {
      const currentPath = window.location.pathname;
      const navLinks = document.querySelectorAll(".nav-link, .mobile-link");

      navLinks.forEach((link) => {
        const href = (link as HTMLAnchorElement).getAttribute("href");
        link.classList.remove("active");

        if (href) {
          const isHome = href === "/" && currentPath === "/";
          const isCurrentPage =
            currentPath.includes(href.replace("/", "")) && href !== "/";

          if (isHome || isCurrentPage) {
            link.classList.add("active");
          }
        }
      });
    }
  }

  // Initialize navigation when DOM is ready
  document.addEventListener("astro:page-load", () => {
    new HopkinsNavigation();
  });
</script>

<style lang="scss">
  // CSS Custom Properties
  :root {
    --nav-height: 80px;
    --nav-bg: rgba(255, 255, 255, 0.95);
    --nav-bg-scrolled: rgba(255, 255, 255, 0.98);
    --nav-shadow: 0 4px 32px rgba(0, 0, 0, 0.1);
    --nav-shadow-scrolled: 0 8px 48px rgba(0, 0, 0, 0.15);
    --nav-backdrop-blur: blur(16px);
    --nav-border: rgba(0, 0, 0, 0.1);
    --nav-text: #333333;
    --nav-text-hover: #0066cc;
    --nav-accent: #0066cc;
    --nav-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --mobile-overlay-bg: rgba(0, 0, 0, 0.5);
    --dropdown-bg: rgba(255, 255, 255, 0.98);
    --dropdown-shadow: 0 12px 48px rgba(0, 0, 0, 0.15);
  }

  // Dark mode variables
  .darkmode {
    --nav-bg: rgba(0, 0, 0, 0.95);
    --nav-bg-scrolled: rgba(0, 0, 0, 0.98);
    --nav-border: rgba(255, 255, 255, 0.1);
    --nav-text: #ffffff;
    --nav-text-hover: #42e0ce;
    --nav-accent: #42e0ce;
    --dropdown-bg: rgba(0, 0, 0, 0.98);
    --mobile-overlay-bg: rgba(0, 0, 0, 0.8);
  }

  // Main Header Container
  .hopkins-header {
    position: sticky;
    top: 0;
    z-index: 1000;
    width: 100%;
  }

  // Main Navigation
  .hopkins-nav {
    width: 100%;
    background: var(--nav-bg);
    backdrop-filter: var(--nav-backdrop-blur);
    -webkit-backdrop-filter: var(--nav-backdrop-blur);
    border-bottom: 1px solid transparent;
    transition: var(--nav-transition);
    min-height: var(--nav-height);
    position: relative;

    &.nav-scrolled {
      background: var(--nav-bg-scrolled);
      box-shadow: var(--nav-shadow-scrolled);
      border-bottom-color: var(--nav-border);
    }
  }

  .nav-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1.5rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: var(--nav-height);
    position: relative;
    z-index: 2; // Above scrolling text
  }

  .nav-brand {
    flex-shrink: 0;
    z-index: 1001;
  }

  // Desktop Navigation
  .nav-menu {
    display: none;

    @media (min-width: 901px) {
      display: block;
    }
  }

  .nav-list {
    display: flex;
    align-items: center;
    list-style: none;
    margin: 0;
    padding: 0;
    gap: 0.5rem;
  }

  .nav-item {
    position: relative;
  }

  .nav-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    color: var(--nav-text);
    text-decoration: none;
    font-weight: 500;
    border-radius: 8px;
    transition: var(--nav-transition);
    background: none;
    border: none;
    cursor: pointer;
    font-size: inherit;
    font-family: inherit;

    span {
      position: relative;
    }

    &:hover,
    &:focus-visible {
      color: var(--nav-text-hover);
      background: rgba(0, 102, 204, 0.1);
    }

    &.active {
      color: var(--nav-accent);
      font-weight: 600;

      span::after {
        content: "";
        position: absolute;
        bottom: -4px;
        left: 0;
        right: 0;
        height: 2px;
        background: var(--nav-accent);
        border-radius: 1px;
      }
    }

    &:focus-visible {
      outline: 2px solid var(--nav-accent);
      outline-offset: 2px;
    }
  }

  .nav-cta {
    background: var(--nav-accent);
    color: white;
    font-weight: 600;

    &:hover,
    &:focus-visible {
      background: var(--nav-text-hover);
      color: white;
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(0, 102, 204, 0.3);
    }
  }

  // Dropdown Styles
  .nav-dropdown {
    &.active {
      .dropdown-trigger {
        color: var(--nav-accent);
        background: rgba(0, 102, 204, 0.1);
      }

      .dropdown-icon {
        transform: rotate(180deg);
      }

      .dropdown-menu {
        opacity: 1;
        visibility: visible;
        transform: translateY(0);
      }
    }
  }

  .dropdown-trigger {
    .dropdown-icon {
      transition: transform 0.2s ease;
    }
  }

  .dropdown-menu {
    position: absolute;
    top: calc(100% + 8px);
    left: 0;
    min-width: 280px;
    background: var(--dropdown-bg);
    backdrop-filter: var(--nav-backdrop-blur);
    -webkit-backdrop-filter: var(--nav-backdrop-blur);
    border-radius: 12px;
    box-shadow: var(--dropdown-shadow);
    border: 1px solid var(--nav-border);
    opacity: 0;
    visibility: hidden;
    transform: translateY(-8px);
    transition: var(--nav-transition);
    z-index: 1000;
  }

  .dropdown-content {
    padding: 0.5rem;
  }

  .dropdown-link {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem 1rem;
    color: var(--nav-text);
    text-decoration: none;
    border-radius: 8px;
    transition: var(--nav-transition);
    font-weight: 500;

    &:hover,
    &:focus-visible {
      background: rgba(0, 102, 204, 0.1);
      color: var(--nav-accent);
    }

    &:focus-visible {
      outline: 2px solid var(--nav-accent);
      outline-offset: 2px;
    }
  }

  // Theme Toggle
  .theme-toggle {
    position: relative;
    width: 40px;
    height: 40px;
    padding: 0;
    justify-content: center;

    .theme-icon {
      position: absolute;
      transition: var(--nav-transition);
    }

    .theme-icon--light {
      opacity: 1;
      transform: rotate(0deg) scale(1);
    }

    .theme-icon--dark {
      opacity: 0;
      transform: rotate(180deg) scale(0);
    }

    .darkmode & {
      .theme-icon--light {
        opacity: 0;
        transform: rotate(180deg) scale(0);
      }

      .theme-icon--dark {
        opacity: 1;
        transform: rotate(0deg) scale(1);
      }
    }
  }

  // Mobile Toggle
  .mobile-toggle {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 1001;

    @media (min-width: 901px) {
      display: none;
    }

    .mobile-toggle-line {
      width: 24px;
      height: 2px;
      background: var(--nav-text);
      border-radius: 1px;
      transition: var(--nav-transition);
      margin: 2px 0;

      &:nth-child(1) {
        transform-origin: center;
      }

      &:nth-child(2) {
        transform-origin: center;
      }

      &:nth-child(3) {
        transform-origin: center;
      }
    }

    &.active {
      .mobile-toggle-line {
        &:nth-child(1) {
          transform: rotate(45deg) translate(5px, 5px);
        }

        &:nth-child(2) {
          opacity: 0;
        }

        &:nth-child(3) {
          transform: rotate(-45deg) translate(7px, -6px);
        }
      }
    }

    &:focus-visible {
      outline: 2px solid var(--nav-accent);
      outline-offset: 2px;
      border-radius: 4px;
    }
  }

  // Mobile Overlay & Menu
  .mobile-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background: var(--mobile-overlay-bg);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    z-index: 999;
    opacity: 0;
    visibility: hidden;
    transition: var(--nav-transition);

    &.active {
      opacity: 1;
      visibility: visible;
    }

    @media (min-width: 901px) {
      display: none;
    }
  }

  .mobile-menu {
    position: absolute;
    top: 0;
    right: 0;
    width: min(400px, 90vw);
    height: 100vh;
    background: var(--nav-bg);
    backdrop-filter: var(--nav-backdrop-blur);
    -webkit-backdrop-filter: var(--nav-backdrop-blur);
    transform: translateX(100%);
    transition: var(--nav-transition);
    overflow-y: auto;

    .mobile-overlay.active & {
      transform: translateX(0);
    }
  }

  .mobile-menu-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1.5rem;
    border-bottom: 1px solid var(--nav-border);
  }

  .mobile-close {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    background: none;
    border: none;
    color: var(--nav-text);
    cursor: pointer;
    border-radius: 8px;
    transition: var(--nav-transition);

    &:hover {
      background: rgba(0, 102, 204, 0.1);
    }
  }

  .mobile-menu-content {
    padding: 1rem;
  }

  .mobile-link {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    color: var(--nav-text);
    text-decoration: none;
    border-radius: 12px;
    transition: var(--nav-transition);
    font-weight: 500;
    margin-bottom: 0.5rem;

    &:hover,
    &:focus-visible {
      background: rgba(0, 102, 204, 0.1);
      color: var(--nav-accent);
    }

    &.mobile-cta {
      background: var(--nav-accent);
      color: white;
      margin-top: 1rem;

      &:hover {
        background: var(--nav-text-hover);
        color: white;
      }
    }

    &.active {
      background: rgba(0, 102, 204, 0.1);
      color: var(--nav-accent);
      font-weight: 600;
    }
  }

  // Mobile Dropdown
  .mobile-dropdown {
    margin-bottom: 0.5rem;
  }

  .mobile-dropdown-trigger {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    gap: 1rem;
    padding: 1rem;
    color: var(--nav-text);
    background: none;
    border: none;
    border-radius: 12px;
    transition: var(--nav-transition);
    font-weight: 500;
    cursor: pointer;
    font-size: inherit;
    font-family: inherit;

    .mobile-dropdown-icon {
      transition: transform 0.2s ease;
    }

    &:hover {
      background: rgba(0, 102, 204, 0.1);
      color: var(--nav-accent);
    }
  }

  .mobile-dropdown.active {
    .mobile-dropdown-trigger {
      background: rgba(0, 102, 204, 0.1);
      color: var(--nav-accent);

      .mobile-dropdown-icon {
        transform: rotate(180deg);
      }
    }

    .mobile-dropdown-content {
      max-height: 500px;
      opacity: 1;
    }
  }

  .mobile-dropdown-content {
    max-height: 0;
    opacity: 0;
    overflow: hidden;
    transition: var(--nav-transition);
    padding-left: 2rem;
  }

  .mobile-dropdown-link {
    display: block;
    padding: 0.75rem 1rem;
    color: var(--nav-text);
    text-decoration: none;
    border-radius: 8px;
    transition: var(--nav-transition);
    margin-bottom: 0.25rem;

    &:hover,
    &:focus-visible {
      background: rgba(0, 102, 204, 0.1);
      color: var(--nav-accent);
    }
  }

  // Smooth scroll accounting for sticky nav
  html {
    scroll-padding-top: calc(var(--nav-height) + 2rem);
  }

  // Prevent layout shifts
  body {
    margin: 0;
  }

  // Reduced motion support
  @media (prefers-reduced-motion: reduce) {
    * {
      transition: none !important;
      animation: none !important;
    }
  }

  // High contrast support
  @media (prefers-contrast: high) {
    .hopkins-nav {
      border-bottom: 2px solid currentColor;
    }

    .dropdown-menu {
      border: 2px solid currentColor;
    }
  }

  // Print styles
  @media print {
    .hopkins-nav {
      position: static;
      box-shadow: none;
      background: white;
      border-bottom: 1px solid black;
    }

    .mobile-toggle,
    .theme-toggle,
    .nav-cta {
      display: none;
    }
  }
</style>
