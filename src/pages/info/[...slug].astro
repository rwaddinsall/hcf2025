---
import DefaultLayout from "@layouts/DefaultLayout.astro";
import PageHeader from "@components/PageHeader.astro";

export async function getStaticPaths() {
  try {
    // Fetch all info pages from Strapi
    const response = await fetch(
      `${import.meta.env.PUBLIC_STRAPI_URL}/api/info-pages?populate=*`
    );

    if (!response.ok) {
      console.error(
        `Failed to fetch info pages: ${response.status} ${response.statusText}`
      );
      return [];
    }

    const data = await response.json();
    const infoPages = data.data || [];

    // Create a path for each info page, excluding the main info page
    return infoPages
      .filter((page: any) => page.attributes.slug !== "main")
      .map((page: any) => ({
        params: { slug: page.attributes.slug },
        props: { infoPage: page.attributes },
      }));
  } catch (error) {
    console.error("Error fetching info pages:", error);
    return [];
  }
}

interface Props {
  infoPage: any;
}

const { infoPage } = Astro.props as Props;
---

<DefaultLayout title={infoPage?.title || "Info"}>
  <PageHeader
    title={infoPage?.title || "Information"}
    subtitle={infoPage?.pageHeader?.subtitle}
  />

  <section class="my-12">
    <div class="container space-content">
      {
        infoPage ? (
          <div>
            <h2>{infoPage.title}</h2>
            {infoPage.content && <div set:html={infoPage.content} />}
            {infoPage.faqs && infoPage.faqs.length > 0 && (
              <div class="mt-8">
                <h3>Frequently Asked Questions</h3>
                {infoPage.faqs.map((faq: any) => (
                  <div class="mb-6">
                    <h4>{faq.title}</h4>
                    <div set:html={faq.content} />
                  </div>
                ))}
              </div>
            )}
          </div>
        ) : (
          <p class="text-2xl">
            This information page is currently being updated. Please check back
            soon.
          </p>
        )
      }
    </div>
  </section>
</DefaultLayout>
