---
import { Icon } from "astro-icon/components";

/**
 * CallToAction Component
 *
 * @description A prominent call-to-action section with a title and link
 */
interface Props {
  /**
   * The title text to display
   */
  title?: string;
  /**
   * The URL the button should link to
   */
  link?: string;
  /**
   * The text to display on the button
   */
  linkText?: string;
  /**
   * Whether to show the arrow icon
   */
  showIcon?: boolean;
}

const {
  title,
  link = "#tickets",
  linkText = "Buy Tickets",
  showIcon = false,
} = Astro.props;
---

<div class="container">
  <div class="call-to-action">
    {title && <h2>{title}</h2>}
    <a href={link} class="cta-button">
      {linkText}
      {showIcon && <Icon name="lucide:arrow-right" />}
    </a>
  </div>
</div>

<style lang="scss">
  @use "../assets/scss/base/breakpoint" as *;

  .call-to-action {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    gap: var(--space-l);
    padding: var(--space-2xl) 0;
    text-align: center;

    h2 {
      margin: 0;
      font-size: var(--font-size-3);
      color: var(--foreground-color);

      @include breakpoint(m) {
        font-size: var(--font-size-4);
      }
    }
  }

  .cta-button {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-xs);
    width: 100%;
    min-height: 80px;
    background-color: var(--color-neutral-900);
    border: 2px solid var(--color-neutral-900);
    border-radius: var(--radius-m);
    padding: var(--space-m) var(--space-xl);
    color: var(--color-neutral-100);
    font-family: var(--font-body);
    font-size: var(--font-size-2);
    font-weight: 400;
    letter-spacing: 0.05em;
    text-decoration: none;
    transition: all var(--animation-speed-fast) var(--cubic-bezier);

    @include breakpoint(m) {
      min-height: 100px;
      font-size: var(--font-size-3);
    }

    &:hover,
    &:focus-visible {
      background-color: var(--color-neutral-100);
      color: var(--color-neutral-900);
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
    }

    &:active {
      transform: translateY(0);
    }

    &:focus-visible {
      outline: 2px solid var(--color-neutral-900);
      outline-offset: 4px;
    }

    svg {
      width: 24px;
      height: 24px;
      transition: transform var(--animation-speed-fast) var(--cubic-bezier);
    }

    &:hover svg {
      transform: translateX(4px);
    }
  }

  // Dark mode adjustments
  :global(.darkmode) .cta-button {
    background-color: var(--color-neutral-100);
    border-color: var(--color-neutral-100);
    color: var(--color-neutral-900);

    &:hover,
    &:focus-visible {
      background-color: var(--color-neutral-900);
      color: var(--color-neutral-100);
    }

    &:focus-visible {
      outline-color: var(--color-neutral-100);
    }
  }
</style>
