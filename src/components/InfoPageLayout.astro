---
import DefaultLayout from '../layouts/DefaultLayout.astro';
import PageHeader from './PageHeader.astro';
import { Accordion, AccordionItem } from 'accessible-astro-components';
import { Icon } from 'astro-icon/components';
import { getInfoPageBySlug } from '../utils/static-content';
import { renderSafeContent } from '../utils/renderContent';

interface AccordionSection {
  title: string;
  details: any;
  category?: string;
}

interface Props {
  slug: string;
  backLink?: {
    href: string;
    text: string;
  };
  fallbackHeading?: string;
  fallbackSubheading?: string;
  fallbackAccordion?: AccordionSection[];
}

const {
  slug,
  backLink = { href: '/info', text: 'Back to Festival Info' },
  fallbackHeading,
  fallbackSubheading,
  fallbackAccordion = [],
} = Astro.props;

// Get data from static content
const pageData = getInfoPageBySlug(slug);
let pageHeading = fallbackHeading || 'Information';
let pageSubheading = fallbackSubheading || '';
let accordionSections = fallbackAccordion;

if (pageData) {
  pageHeading = pageData.heading || fallbackHeading || 'Information';
  pageSubheading = pageData.subheading || fallbackSubheading || '';

  // Use accordion data directly from static content
  if (pageData.accordion && pageData.accordion.length > 0) {
    accordionSections = pageData.accordion.map((section) => ({
      ...section,
      details: renderSafeContent(section.details),
    }));
  }
} else if (fallbackAccordion.length > 0) {
  // Also process fallback accordion sections
  accordionSections = fallbackAccordion.map((section) => ({
    ...section,
    details: renderSafeContent(section.details),
  }));
}
---

<DefaultLayout
  title={`${pageHeading} - Hopkins Creek Festival`}
  description={pageSubheading ||
    `${pageHeading} information for Hopkins Creek Festival`}
>
  <section class='my-12'>
    <PageHeader title={pageHeading} subtitle={pageSubheading} />
  </section>

  <section class='my-12'>
    <div class='container'>
      <div class='space-content'>
        <div class='mb-8'>
          <a
            href={backLink.href}
            class='inline-flex items-center gap-2 text-primary-500 hover:text-primary-600'
          >
            <Icon name='lucide:arrow-left' size='20' />
            {backLink.text}
          </a>
        </div>

        <Accordion>
          {accordionSections.map((section: AccordionSection) => (
            <AccordionItem title={section.title}>
              <div set:html={section.details} />
            </AccordionItem>
          ))}
        </Accordion>

        <slot />
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang='scss'>
  .space-content {
    h4 {
      font-weight: bold;
      margin-top: var(--space-m);
      margin-bottom: var(--space-s);
      color: var(--foreground-color);
    }

    ul {
      margin-bottom: var(--space-m);
    }

    li {
      margin-bottom: var(--space-2xs);
    }

    p {
      margin-bottom: var(--space-m);
      line-height: var(--line-height-relaxed);
      color: var(--foreground-color);

      &:last-child {
        margin-bottom: 0;
      }
    }

    .content-link {
      color: var(--link-color);
      text-decoration: underline;
      font-weight: 500;

      &:hover,
      &:focus-visible {
        color: var(--link-hover-color);
      }
    }
  }

  // Responsive adjustments


  // :global(.accordion details div) {
  //   width: 100%;
  //   box-sizing: border-box;
  //   word-wrap: break-word;
  //   overflow-wrap: break-word;
  // }
</style>
