---
import { Breadcrumbs, BreadcrumbsItem } from "accessible-astro-components";
import { Image } from "astro:assets";
import sanitizeHtml from "sanitize-html";

/**
 * PageHeader Component
 *
 * @description PageHeader description
 */
interface Props {
  /**
   * Additional classes to apply to the PageHeader
   */
  class?: string;
  /**
   * The featured image of the page
   */
  featuredImage?: string;
  /**
   * The title of the page
   */
  title: string;
  /**
   * The subtitle of the page
   * @description Can contain HTML content (will be sanitized)
   */
  subtitle?: string;
  /**
   * The background color of the page header
   */
  backgroundColor?: string;
  /**
   * The text color of the page header
   */
  textColor?: string;
}

const {
  class: className,
  featuredImage,
  title,
  subtitle,
  backgroundColor = "var(--background-color)",
  textColor = "var(--foreground-color)",
} = Astro.props;

const sanitizedSubtitle = subtitle ? sanitizeHtml(subtitle) : undefined;
---

<section
  class:list={[className, "page-header"]}
  style={`background-color: ${backgroundColor}; color: ${textColor};`}
>
  <div class="container">
    <div class="content">
      <Breadcrumbs>
        <BreadcrumbsItem href="/" label="Home" />
        <BreadcrumbsItem currentPage={true} label={title} />
      </Breadcrumbs>

      <div class="header-content">
        <h1>{title}</h1>
        {
          sanitizedSubtitle && (
            <div class="subtitle" set:html={sanitizedSubtitle} />
          )
        }
      </div>
    </div>

    {
      featuredImage && (
        <div class="featured-image">
          <Image
            src={featuredImage}
            alt={`Featured image for ${title}`}
            width={800}
            height={400}
            loading="eager"
          />
        </div>
      )
    }
  </div>
</section>

<style lang="scss">
  @use "../assets/scss/base/mixins" as *;
  @use "../assets/scss/base/breakpoint" as *;

  .page-header {
    padding: var(--space-l) 0;
    min-height: 300px;
    display: flex;
    align-items: center;
    position: relative;
    overflow: hidden;

    .container {
      display: grid;
      grid-template-columns: 1fr;
      gap: var(--space-l);
      z-index: 2;
      position: relative;

      @include breakpoint("l") {
        grid-template-columns: 2fr 1fr;
        align-items: center;
      }
    }

    .content {
      display: flex;
      flex-direction: column;
      gap: var(--space-m);
    }

    .header-content {
      h1 {
        font-size: var(--font-size-4xl);
        font-weight: var(--font-weight-bold);
        line-height: var(--line-height-tight);
        margin: 0;

        @include breakpoint("m") {
          font-size: var(--font-size-5xl);
        }

        @include breakpoint("l") {
          font-size: var(--font-size-6xl);
        }
      }

      .subtitle {
        font-size: var(--font-size-lg);
        line-height: var(--line-height-relaxed);
        margin-top: var(--space-s);
        opacity: 0.9;

        @include breakpoint("md") {
          font-size: var(--font-size-xl);
        }
      }
    }

    .featured-image {
      position: relative;
      border-radius: var(--radius-l);
      overflow: hidden;
      box-shadow: var(--elevation-3);

      img {
        width: 100%;
        height: auto;
        object-fit: cover;
      }

      @include breakpoint("l") {
        max-height: 400px;
      }
    }

    // Optional: Add background pattern or texture
    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(
        135deg,
        transparent 0%,
        rgba(0, 0, 0, 0.05) 100%
      );
      z-index: 1;
    }
  }
</style>
