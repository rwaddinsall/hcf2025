---
import heroGalleryVideo from "@assets/HC25-Pokie-No-Shadows-1.mp4";

/**
 * Hero Gallery Component
 *
 * @description A component that displays the main hero gallery video with optimized loading and responsive design
 */

interface Props {
  /**
   * Additional CSS classes to apply to the gallery container
   */
  class?: string;
  /**
   * Whether the video should autoplay (requires muted=true)
   */
  autoplay?: boolean;
  /**
   * Whether the video should be muted
   */
  muted?: boolean;
  /**
   * Whether the video should loop
   */
  loop?: boolean;
  /**
   * Title for the video (required for accessibility)
   */
  title?: string;
  /**
   * Loading strategy for the video
   */
  loading?: "lazy" | "eager";
}

const {
  class: className = "",
  autoplay = true,
  muted = true,
  loop = true,
  title = "Hopkins Creek Festival showcase video",
  loading = "lazy",
} = Astro.props;
---

<section class={`hero-gallery ${className}`} aria-labelledby="gallery-heading">
  <div class="hero-gallery__container">
    <h2 id="gallery-heading" class="visually-hidden">Festival Video Gallery</h2>

    <div class="hero-gallery__video-wrapper">
      <video
        src={heroGalleryVideo}
        autoplay={autoplay && muted}
        muted={muted}
        loop={loop}
        playsinline
        preload={loading === "eager" ? "auto" : "metadata"}
        class="hero-gallery__video"
        aria-label={title}
        title={title}
      >
        <source src={heroGalleryVideo} type="video/mp4" />
        <p>
          Your browser does not support the video tag.
          <a href={heroGalleryVideo} download>Download the video</a> instead.
        </p>
      </video>
    </div>
  </div>
</section>

<script>
  // Accessibility enhancement for reduced motion preference
  function initVideoAccessibility() {
    const videos = document.querySelectorAll(
      ".hero-gallery__video"
    ) as NodeListOf<HTMLVideoElement>;

    videos.forEach((video: HTMLVideoElement) => {
      // Respect user's reduced motion preference
      const prefersReducedMotion = window.matchMedia(
        "(prefers-reduced-motion: reduce)"
      );

      function handleMotionPreference() {
        if (prefersReducedMotion.matches) {
          video.pause();
          video.removeAttribute("autoplay");
          // Optionally show controls for manual playback
          video.controls = true;
        }
      }

      // Check preference on load
      handleMotionPreference();

      // Listen for changes
      prefersReducedMotion.addEventListener("change", handleMotionPreference);
    });
  }

  // Initialize when DOM is ready
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initVideoAccessibility);
  } else {
    initVideoAccessibility();
  }
</script>

<style lang="scss">
  @use "../assets/scss/base/_mixins" as *;

  // Screen reader utility using design system mixin
  .visually-hidden {
    @include sr-only;
  }

  .hero-gallery {
    padding: var(--space-lg) var(--space-md);

    &__container {
      max-width: var(--container-max-width);
      margin: 0 auto;
      width: 100%;
      padding-inline: var(--container-gutter);
    }

    &__video-wrapper {
      position: relative;
      border-radius: var(--radius-lg);
      overflow: hidden;

      @media (max-width: 767px) {
        border-radius: var(--radius-md);
      }

      @media (max-width: 479px) {
        border-radius: var(--radius-sm);
      }
    }

    &__video {
      width: 100%;
      height: auto;
      display: block;
      object-fit: contain;
      object-position: center;
    }
  }

  // Large screens optimization
  @media (min-width: 1024px) {
    .hero-gallery {
      padding: var(--space-xl) var(--space-lg);
    }

    .hero-gallery__video-wrapper {
      border-radius: var(--radius-xl);
    }
  }
</style>
