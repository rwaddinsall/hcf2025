---
import DefaultLayout from "../layouts/DefaultLayout.astro";
import PageHeader from "./PageHeader.astro";
import { Accordion, AccordionItem } from "accessible-astro-components";
import { Icon } from "astro-icon/components";
import { fetchInfoPageBySlug } from "../lib/strapi";

interface InfoLink {
  text: string;
  url: string;
}

interface InfoSection {
  title: string;
  content: any[];
  links?: InfoLink[];
}

interface Props {
  slug: string;
  backLink?: {
    href: string;
    text: string;
  };
  fallbackTitle?: string;
  fallbackSubtitle?: string;
  fallbackSections?: InfoSection[];
}

const {
  slug,
  backLink = { href: "/info", text: "Back to Festival Info" },
  fallbackTitle,
  fallbackSubtitle,
  fallbackSections = [],
} = Astro.props;

// Fetch data from Strapi
let pageData: any = null;
let pageTitle = fallbackTitle || "Information";
let pageSubtitle = fallbackSubtitle || "";
let infoSections = fallbackSections;

try {
  pageData = await fetchInfoPageBySlug(slug);

  if (pageData) {
    pageTitle = pageData.title || fallbackTitle || "Information";
    pageSubtitle = pageData.pageHeader?.subtitle || fallbackSubtitle || "";

    // Transform FAQs to InfoSections format
    if (pageData.faqs && pageData.faqs.length > 0) {
      infoSections = pageData.faqs.map((faq: any) => ({
        title: faq.question,
        content: faq.answer
          ? [{ type: "paragraph", children: [{ text: faq.answer }] }]
          : [],
        links: faq.links || [],
      }));
    }
  }
} catch (error) {
  console.warn(`Failed to fetch info page data for slug "${slug}":`, error);
  // Use fallback data
}
---

<DefaultLayout
  title={`${pageTitle} - Hopkins Creek Festival`}
  description={pageData?.metaDescription}
>
  <section class="my-12">
    <PageHeader title={pageTitle} subtitle={pageSubtitle} />
  </section>

  <section class="my-12">
    <div class="container">
      <div class="space-content">
        <div class="mb-8">
          <a
            href={backLink.href}
            class="inline-flex items-center gap-2 text-primary-500 hover:text-primary-600"
          >
            <Icon name="lucide:arrow-left" size="20" />
            {backLink.text}
          </a>
        </div>

        {
          infoSections && infoSections.length > 0 && (
            <Accordion>
              {infoSections.map((section) => (
                <AccordionItem title={section.title}>
                  <div class="space-content">
                    {/* 
                      Render structured content blocks from CMS data
                      Handles paragraphs with inline links and unordered lists
                    */}
                    {section.content.map((block) => {
                      // Render paragraph blocks with potential inline links
                      if (block.type === "paragraph") {
                        return (
                          <p>
                            {block.children.map((child: any) => {
                              const hasLink = child.marks?.some(
                                (mark: any) => mark.type === "link"
                              );

                              if (hasLink) {
                                const linkMark = child.marks.find(
                                  (mark: any) => mark.type === "link"
                                );
                                return (
                                  <a
                                    href={linkMark.attrs.href}
                                    class="content-link"
                                  >
                                    {child.text}
                                  </a>
                                );
                              }

                              return child.text;
                            })}
                          </p>
                        );
                      }

                      // Render list blocks with simple text items
                      if (block.type === "list") {
                        return (
                          <ul class="list-disc list-inside">
                            {block.children.map((item: any) => (
                              <li>
                                {item.children
                                  .map((child: any) => child.text)
                                  .join("")}
                              </li>
                            ))}
                          </ul>
                        );
                      }

                      // Skip unsupported block types
                      return null;
                    })}

                    {section.links && section.links.length > 0 && (
                      <div class="p-4 mt-4 border border-gray-200 rounded-lg bg-gray-50">
                        <h4 class="mb-2 font-bold">Useful Links:</h4>
                        <div class="space-y-2">
                          {section.links.map((link) => (
                            <a
                              href={link.url}
                              class="block underline text-primary-500 hover:text-primary-600"
                              target={
                                link.url.startsWith("http")
                                  ? "_blank"
                                  : undefined
                              }
                              rel={
                                link.url.startsWith("http")
                                  ? "noopener noreferrer"
                                  : undefined
                              }
                            >
                              {link.text}
                            </a>
                          ))}
                        </div>
                      </div>
                    )}
                  </div>
                </AccordionItem>
              ))}
            </Accordion>
          )
        }

        <slot />
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  .space-content {
    h4 {
      font-weight: bold;
      margin-top: var(--space-m);
      margin-bottom: var(--space-s);
      color: var(--foreground-color);
    }

    ul {
      margin-bottom: var(--space-m);
    }

    li {
      margin-bottom: var(--space-2xs);
    }

    p {
      margin-bottom: var(--space-m);
      line-height: var(--line-height-relaxed);
      color: var(--foreground-color);

      &:last-child {
        margin-bottom: 0;
      }
    }

    .content-link {
      color: var(--link-color);
      text-decoration: underline;
      font-weight: 500;

      &:hover,
      &:focus-visible {
        color: var(--link-hover-color);
      }
    }
  }

  // Responsive adjustments
  @media (max-width: 48rem) {
    .space-content {
      padding: 0 var(--space-s);
    }
  }
</style>
