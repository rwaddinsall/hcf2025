---
/**
 * Hopkins Creek Header Component with Navigation
 *
 * @description A complete header component with sticky navigation
 * and enhanced UX features
 */
import { Icon } from "astro-icon/components";
import { SkipLink } from "accessible-astro-components";
import ScrollingText from "./ScrollingText.astro";

// Check if we're on the home page
const isHomePage = Astro.url.pathname === "/";
---

<header class="hopkins-header">
  <SkipLink />
  <nav class="hopkins-nav" role="navigation" aria-label="Main navigation">
    <div class="nav-container launch-version">
      <ScrollingText strapiType="header" variant="nav" isVisible={isHomePage} />

      <div class="nav-menu" id="nav-menu">
        <ul class="nav-list">
          <li class="nav-item">
            <a href="/" class="nav-link" aria-label="Go to homepage">
              <span>Home</span>
            </a>
          </li>

          <li class="nav-item">
            <a
              href="/applications"
              class="nav-link"
              aria-label="View applications"><span>Applications</span></a
            >
          </li>
          <li class="nav-item nav-dropdown" data-dropdown>
            <button
              class="nav-link dropdown-trigger"
              aria-expanded="false"
              aria-haspopup="true"
              aria-controls="info-dropdown"
              data-dropdown-trigger
            >
              <span>Info</span>
              <Icon
                name="lucide:chevron-down"
                class="dropdown-icon"
                size="16"
              />
            </button>
            <div class="dropdown-menu" id="info-dropdown" data-dropdown-menu>
              <div class="dropdown-content">
                <a href="/info/" class="dropdown-link">
                  <span>Festival Info</span>
                </a>
                <a href="/info/tickets" class="dropdown-link">
                  <span>Tickets</span>
                </a>
                <a href="/info/camping" class="dropdown-link">
                  <span>Camping & Accommodation</span>
                </a>
                <a href="/info/motor-inn" class="dropdown-link">
                  <span>The Motor Inn</span>
                </a>
                <a href="/info/accessibility" class="dropdown-link">
                  <span>Accessibility</span>
                </a>
                <a href="/info/getting-there" class="dropdown-link">
                  <span>Travel & Entry</span>
                </a>
                <a href="/info/food-beverages" class="dropdown-link">
                  <span>Food & Beverages</span>
                </a>
                <a href="/applications" class="dropdown-link">
                  <span>Applications</span>
                </a>
              </div>
            </div>
          </li>
          <li class="nav-item">
            <div class="launch-cta">
              <a
                href="https://events.humanitix.com/hopkins-creek-2025"
                class="nav-link nav-cta launch-cta-button"
                aria-label="Buy festival tickets"
                target="_blank"
                rel="noopener noreferrer"
              >
                <span>Get Tickets</span>
              </a>
            </div>
          </li>
        </ul>

        <button
          class="mobile-toggle"
          aria-expanded="false"
          aria-controls="nav-menu"
          aria-label="Toggle navigation menu"
          data-mobile-toggle
        >
          <span class="mobile-toggle-line"></span>
          <span class="mobile-toggle-line"></span>
          <span class="mobile-toggle-line"></span>
        </button>
      </div>

      <!-- Mobile Navigation Overlay -->
      <div class="mobile-overlay" data-mobile-overlay>
        <div class="mobile-menu">
          <div class="mobile-menu-header">
            <a href="/" class="font-bold text-foreground-color">Hopkins Creek</a
            >
          </div>
          <div class="mobile-menu-content">
            <a href="/" class="mobile-link">
              <span>Home</span>
            </a>
            <a href="/program/" class="mobile-link">
              <span>Program</span>
            </a>
            <div class="mobile-dropdown" data-mobile-dropdown>
              <button
                class="mobile-dropdown-trigger"
                data-mobile-dropdown-trigger
              >
                <span>Info</span>
                <Icon
                  name="lucide:chevron-down"
                  class="mobile-dropdown-icon"
                  size="16"
                />
              </button>
              <div class="mobile-dropdown-content" data-mobile-dropdown-content>
                <a href="/info/" class="mobile-dropdown-link">Festival Info</a>
                <a href="/info/camping" class="mobile-dropdown-link"
                  >Camping & Accommodation</a
                >
                <a href="/info/motor-inn" class="mobile-dropdown-link"
                  >The Motor Inn</a
                >
                <a href="/info/accessibility" class="mobile-dropdown-link"
                  >Accessibility</a
                >
                <a href="/info/getting-there" class="mobile-dropdown-link"
                  >Travel & Entry</a
                >
                <a href="/info/food-beverages" class="mobile-dropdown-link"
                  >Food & Beverages</a
                >
                <a href="/applications" class="mobile-dropdown-link"
                  >Applications</a
                >
                <a href="/info/tickets" class="mobile-dropdown-link">Tickets</a>
              </div>
            </div>
            <a
              href="https://events.humanitix.com/hopkins-creek-2025"
              class="mobile-link mobile-cta"
            >
              <span>Get Tickets</span>
            </a>
          </div>
        </div>
      </div>
    </div>

    <script>
      class HopkinsNavigation {
        private nav: HTMLElement;
        private mobileToggle: HTMLButtonElement;
        private mobileOverlay: HTMLElement;
        private dropdownTriggers: NodeListOf<HTMLButtonElement>;
        private lastScrollY = 0;
        private isScrolling = false;

        constructor() {
          this.nav = document.querySelector(".hopkins-nav") as HTMLElement;
          this.mobileToggle = document.querySelector(
            "[data-mobile-toggle]"
          ) as HTMLButtonElement;
          this.mobileOverlay = document.querySelector(
            "[data-mobile-overlay]"
          ) as HTMLElement;
          this.dropdownTriggers = document.querySelectorAll(
            "[data-dropdown-trigger]"
          ) as NodeListOf<HTMLButtonElement>;

          this.init();
        }

        private init(): void {
          this.setHomepageClass();
          this.handleStickyScroll();
          this.setupMobileMenu();
          this.setupDropdowns();
          this.setupKeyboardNavigation();
          this.setActiveMenuItem();

          // Event listeners
          window.addEventListener("scroll", this.handleScroll.bind(this), {
            passive: true,
          });
          window.addEventListener("resize", this.handleResize.bind(this), {
            passive: true,
          });
          document.addEventListener(
            "click",
            this.handleOutsideClick.bind(this)
          );
        }

        private setHomepageClass(): void {
          // Add homepage class for CSS targeting
          const isHomePage = window.location.pathname === "/";
          if (isHomePage) {
            this.nav.classList.add("hopkins-nav--homepage");
          } else {
            this.nav.classList.remove("hopkins-nav--homepage");
          }
        }

        private handleScroll(): void {
          if (!this.isScrolling) {
            window.requestAnimationFrame(() => {
              this.handleStickyScroll();
              this.isScrolling = false;
            });
            this.isScrolling = true;
          }
        }

        private handleStickyScroll(): void {
          const currentScrollY = window.scrollY;
          const scrollingTextElement = document.querySelector(
            ".scrolling-text-container--nav"
          );

          if (currentScrollY > 150) {
            this.nav.classList.add("nav-scrolled");
            // Debug: Log when nav-scrolled class is added
            console.log("Nav scrolled class added at scrollY:", currentScrollY);
            if (scrollingTextElement) {
              console.log(
                "ScrollingText nav element found:",
                scrollingTextElement
              );
              console.log(
                "ScrollingText computed style:",
                window.getComputedStyle(scrollingTextElement)
              );
            }
          } else {
            this.nav.classList.remove("nav-scrolled");
            // Debug: Log when nav-scrolled class is removed
            console.log(
              "Nav scrolled class removed at scrollY:",
              currentScrollY
            );
          }

          // Close dropdowns when scrolling significantly
          if (Math.abs(currentScrollY - this.lastScrollY) > 50) {
            this.closeAllDropdowns();
          }

          this.lastScrollY = currentScrollY;
        }

        private setupMobileMenu(): void {
          this.mobileToggle.addEventListener("click", () => {
            this.toggleMobileMenu();
          });

          // Mobile dropdown functionality
          const mobileDropdownTriggers = document.querySelectorAll(
            "[data-mobile-dropdown-trigger]"
          );
          mobileDropdownTriggers.forEach((trigger) => {
            trigger.addEventListener("click", () => {
              const dropdown = trigger.closest(
                "[data-mobile-dropdown]"
              ) as HTMLElement;
              dropdown.classList.toggle("active");
            });
          });
        }

        private setupDropdowns(): void {
          this.dropdownTriggers.forEach((trigger) => {
            trigger.addEventListener("click", (e) => {
              e.preventDefault();
              this.toggleDropdown(trigger);
            });

            trigger.addEventListener("keydown", (e) => {
              if (e.key === "Enter" || e.key === " ") {
                e.preventDefault();
                this.toggleDropdown(trigger);
              }
            });
          });
        }

        private setupThemeToggle(): void {
          // Theme toggle functionality removed
        }

        private setupKeyboardNavigation(): void {
          document.addEventListener("keydown", (e) => {
            if (e.key === "Escape") {
              this.closeAllDropdowns();
              this.closeMobileMenu();
            }
          });
        }

        private toggleMobileMenu(): void {
          const isOpen = this.mobileOverlay.classList.contains("active");

          if (isOpen) {
            this.closeMobileMenu();
          } else {
            this.openMobileMenu();
          }
        }

        private openMobileMenu(): void {
          this.mobileOverlay.classList.add("active");
          this.mobileToggle.classList.add("active");
          this.mobileToggle.setAttribute("aria-expanded", "true");
          document.body.style.overflow = "hidden";
        }

        private closeMobileMenu(): void {
          this.mobileOverlay.classList.remove("active");
          this.mobileToggle.classList.remove("active");
          this.mobileToggle.setAttribute("aria-expanded", "false");
          document.body.style.overflow = "";
        }

        private toggleDropdown(trigger: HTMLButtonElement): void {
          const dropdown = trigger.closest("[data-dropdown]") as HTMLElement;
          const isOpen = dropdown.classList.contains("active");

          this.closeAllDropdowns();

          if (!isOpen) {
            this.openDropdown(dropdown, trigger);
          }
        }

        private openDropdown(
          dropdown: HTMLElement,
          trigger: HTMLButtonElement
        ): void {
          dropdown.classList.add("active");
          trigger.setAttribute("aria-expanded", "true");
        }

        private closeDropdown(dropdown: HTMLElement): void {
          const trigger = dropdown.querySelector(
            "[data-dropdown-trigger]"
          ) as HTMLButtonElement;
          dropdown.classList.remove("active");
          trigger.setAttribute("aria-expanded", "false");
        }

        private closeAllDropdowns(): void {
          const openDropdowns = document.querySelectorAll(
            "[data-dropdown].active"
          );
          openDropdowns.forEach((dropdown) => {
            this.closeDropdown(dropdown as HTMLElement);
          });
        }

        private handleOutsideClick(e: Event): void {
          const target = e.target as Element;

          // Close dropdowns if clicking outside
          if (!target.closest("[data-dropdown]")) {
            this.closeAllDropdowns();
          }

          // Close mobile menu if clicking on overlay
          if (target.classList.contains("mobile-overlay")) {
            this.closeMobileMenu();
          }
        }

        private handleResize(): void {
          if (window.innerWidth > 900) {
            this.closeMobileMenu();
          }
        }

        private setActiveMenuItem(): void {
          const currentPath = window.location.pathname;
          const navLinks = document.querySelectorAll(".nav-link, .mobile-link");

          navLinks.forEach((link) => {
            const href = (link as HTMLAnchorElement).getAttribute("href");
            link.classList.remove("active");

            if (href) {
              const isHome = href === "/" && currentPath === "/";
              const isCurrentPage =
                currentPath.includes(href.replace("/", "")) && href !== "/";

              if (isHome || isCurrentPage) {
                link.classList.add("active");
              }
            }
          });
        }
      }

      // Initialize navigation when DOM is ready
      document.addEventListener("astro:page-load", () => {
        new HopkinsNavigation();
      });
    </script>

    <style lang="scss">
      // Navigation CSS variables - leveraging base design system
      :root {
        --nav-height: 80px;
        --nav-bg: transparent;
        --nav-bg-scrolled: transparent;
        --nav-shadow: none;
        --nav-shadow-scrolled: none;
        --nav-backdrop-blur: none;
        --nav-border: transparent;
        --nav-text: var(--foreground-color); // Uses base design system
        --nav-text-hover: var(--foreground-color);
        --nav-accent: var(--foreground-color);
        --nav-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        --mobile-overlay-bg: rgba(0, 0, 0, 0.5);
        --dropdown-bg: #ffffff;
        --dropdown-shadow: 0 12px 48px rgba(0, 0, 0, 0.15);
      }

      // Sticky header container
      .hopkins-header {
        position: sticky;
        top: 0;
        z-index: 1000;
        width: 100%;
      }

      // Main navigation bar with scroll effects
      .hopkins-nav {
        width: 100%;
        background: var(--nav-bg);
        border-bottom: 1px solid transparent;
        transition: var(--nav-transition);
        min-height: var(--nav-height);
        position: relative;

        // Scrolled state styling - maintain transparency
        &.nav-scrolled {
          background: var(--nav-bg-scrolled);
          box-shadow: var(--nav-shadow-scrolled);
          border-bottom-color: transparent;

          // Apply hover state styling to nav links when scrolled
          .nav-link:not(.nav-cta) {
            background: var(--brand-secondary);
            color: var(--nav-text-hover);
          }

          // Keep CTA button styling consistent
          .nav-cta {
            background: var(--nav-accent);
            color: white;
          }

          // Hide scrolling text when scrolled - optimized for nav variant
          .nav-container .scrolling-text-container--nav {
            opacity: 0 !important;
            visibility: hidden !important;
            transform: translateY(-50%) translateY(-10px) !important;
            pointer-events: none !important;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
          }
        }
      }

      // Container with max-width and centering - matching main content grid system
      .nav-container {
        max-width: var(--grid-max-width);
        margin: 0 auto;
        padding-inline: var(--grid-gutter);
        padding-block: var(
          --space-xs
        ); // Add vertical rhythm using design system
        display: flex;
        align-items: center;
        justify-content: space-between;
        min-height: var(--nav-height);
        position: relative;
        z-index: 2;

        // Responsive margin adjustments using design system breakpoints
        @media (min-width: 768px) {
          padding-inline: var(--space-l); // More space on larger screens
          padding-block: var(--space-s);
        }

        @media (min-width: 1024px) {
          padding-inline: var(--space-xl); // Maximum space on desktop
          padding-block: var(--space-m);
        }

        // Fix ScrollingText positioning in nav context with proper margins
        .scrolling-text-container--nav {
          position: absolute;
          top: 50%;
          left: var(--space-l); // Use design system spacing
          transform: translateY(-50%);
          z-index: 1; // Behind nav items but above background
          pointer-events: none;
          opacity: 0.6;
          width: calc(100% - var(--space-2xl)); // Proper responsive width
          max-width: 400px; // Prevent overlap with nav items
          margin-right: var(--space-xl); // Ensure clearance from nav menu

          // Responsive positioning adjustments
          @media (min-width: 768px) {
            left: var(--space-xl);
            width: calc(100% - var(--space-3xl));
            margin-right: var(--space-2xl);
          }

          @media (min-width: 1024px) {
            left: var(--space-2xl);
            width: calc(100% - var(--space-4xl));
            margin-right: var(--space-3xl);
          }

          // Override the default nav variant styles for better integration
          &:not(.hopkins-nav.nav-scrolled &) {
            // Only apply when not scrolled
            opacity: 0.6;
            visibility: visible;
          }

          // Hide on mobile to prevent overlap with hamburger menu
          @media (max-width: 900px) {
            display: none;
          }
        }
      }

      // Brand area containing both ScrollingText and Logo
      .nav-brand-area {
        position: relative;
        flex-shrink: 0;
        z-index: 1001;
        display: flex;
        align-items: center;
        min-height: 2.5rem; // Prevent layout shifts

        // On homepage when not scrolled, brand area takes available space for scrolling text
        .hopkins-nav.hopkins-nav--homepage:not(.nav-scrolled) & {
          flex: 1;
          max-width: 25%; // Limit to first quarter of header
          margin-right: var(--space-l); // Ensure clearance from nav

          @media (max-width: 900px) {
            display: none; // Hide ScrollingText on mobile
          }
        }

        // When scrolled or not on homepage, brand area is compact for logo
        .hopkins-nav.nav-scrolled &,
        .hopkins-nav:not(.hopkins-nav--homepage) & {
          flex: 0;
          max-width: none;
          margin-right: var(--space-m);
        }
      }

      // ScrollingText navigation variant
      .scrolling-text-nav {
        // Show by default on homepage when not scrolled
        opacity: 1;
        transition: var(--nav-transition);

        // Hide when scrolled or not on homepage
        .hopkins-nav.nav-scrolled &,
        .hopkins-nav:not(.hopkins-nav--homepage) & {
          opacity: 0;
          pointer-events: none;
        }

        // Ensure it doesn't interfere with logo positioning
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 100%;

        // Only show on homepage when not scrolled
        .hopkins-nav.hopkins-nav--homepage:not(.nav-scrolled) & {
          position: static;
          opacity: 1;
          pointer-events: auto;
        }
      }

      // Navigation Logo
      .nav-logo {
        transition: var(--nav-transition);
        position: relative;
        z-index: 2; // Above ScrollingText

        // Hidden state (homepage, not scrolled)
        &--hidden {
          opacity: 0;
          transform: scale(0.9);
          pointer-events: none;

          // Show when scrolled on homepage
          .hopkins-nav.nav-scrolled & {
            opacity: 1;
            transform: scale(1);
            pointer-events: auto;
          }
        }

        // Visible state (non-homepage or scrolled)
        &--visible {
          opacity: 1;
          transform: scale(1);
          pointer-events: auto;
        }
      }

      // Legacy nav-brand class (keeping for compatibility)
      .nav-brand {
        flex-shrink: 0;
        z-index: 1001;
      }

      // Navigation container - shows hamburger on mobile, navigation on desktop
      .nav-menu {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        position: relative;
        z-index: 3; // Above ScrollingText
        margin-left: auto; // Ensure right alignment
      }

      // Desktop navigation list - hidden on mobile
      .nav-list {
        display: none;

        @media (min-width: 901px) {
          display: flex;
          align-items: center;
          list-style: none;
          margin: 0;
          padding: 0;
          gap: var(--space-xs); // Use design system spacing for consistent gaps
          margin-left: auto; // Push to right side
          margin-right: var(--space-s); // Space from edge using design system
        }
      }

      .nav-item {
        position: relative;
        flex-shrink: 0;
      }

      // Special styling for CTA container
      .launch-cta {
        flex-shrink: 0;
        margin-left: 0.5rem;
      }

      // Base nav link styling - IMPROVED PILLS
      .nav-link {
        display: flex;
        align-items: center;
        gap: var(--space-s);
        padding: var(--space-xs) var(--space-m); // Slightly more horizontal padding
        color: var(--nav-text);
        text-decoration: none;
        font-weight: 500;
        border-radius: 9999px; // True pill shape instead of 50px
        transition: var(--nav-transition);
        background: transparent;
        border: 1px solid transparent; // Prevents size jumping on hover
        cursor: pointer;
        font-size: inherit;
        font-family: inherit;
        white-space: nowrap;
        margin: var(--space-2xs) 0;

        span {
          position: relative;
        }

        // Improved hover states
        &:hover,
        &:focus-visible {
          color: var(--nav-text-hover);
          background: var(--brand-secondary);
          border-color: rgba(255, 255, 255, 0.1); // Subtle border
        }

        // Active state with underline (keeping original behavior)
        &.active {
          color: var(--nav-accent);
          font-weight: 600;

          span::after {
            content: "";
            position: absolute;
            bottom: -4px;
            left: 0;
            right: 0;
            height: 2px;
            background: var(--nav-accent);
            border-radius: 1px;
          }
        }

        // Enhanced focus visibility
        &:focus-visible {
          outline: 2px solid var(--nav-accent);
          outline-offset: 2px;
        }
      }

      // CTA button styling - IMPROVED PILLS
      .nav-cta {
        background: var(--nav-accent);
        color: white;
        font-weight: 600;
        border-radius: 9999px; // True pill shape
        padding: var(--space-xs) var(--space-l) !important; // More generous padding
        flex-shrink: 0;
        margin-left: var(--space-s);
        border: 1px solid var(--nav-accent); // Consistent border

        &:hover,
        &:focus-visible {
          background: var(--nav-text-hover);
          color: white;
          transform: translateY(-1px);
          border-color: var(--nav-text-hover);
        }
      }

      // Dropdown Styles
      .nav-dropdown {
        // Hover and active states
        &:hover,
        &.active {
          .dropdown-trigger {
            color: var(--nav-accent);
            background: var(--brand-secondary); // Uses base design system
          }

          .dropdown-icon {
            transform: rotate(180deg);
          }

          .dropdown-menu {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
          }
        }
      }

      .dropdown-trigger {
        .dropdown-icon {
          transition: transform 0.2s ease;
        }
      }

      // Dropdown menu positioning and styling
      .dropdown-menu {
        position: absolute;
        top: calc(100% + 8px);
        left: 0;
        min-width: 280px;
        background: var(--dropdown-bg);
        backdrop-filter: var(--nav-backdrop-blur);
        -webkit-backdrop-filter: var(--nav-backdrop-blur);
        border-radius: var(--radius-l); // Use design system border radius
        box-shadow: var(--dropdown-shadow);
        border: 1px solid var(--nav-border);
        opacity: 0;
        visibility: hidden;
        transform: translateY(-8px);
        transition: var(--nav-transition);
        z-index: 1000;
      }

      .dropdown-content {
        padding: var(--space-xs); // Use design system spacing
      }

      // Improved dropdown links
      .dropdown-link {
        display: flex;
        align-items: center;
        gap: var(--space-s);
        padding: var(--space-xs) var(--space-m);
        color: var(--nav-text);
        text-decoration: none;
        border-radius: 9999px; // True pill shape
        transition: var(--nav-transition);
        font-weight: 500;
        border: 1px solid transparent; // Prevents jumping

        &:hover,
        &:focus-visible {
          background: var(--brand-secondary);
          color: var(--nav-accent);
          border-color: rgba(0, 102, 204, 0.1);
        }

        &:focus-visible {
          outline: 2px solid var(--nav-accent);
          outline-offset: 2px;
        }
      }

      // Mobile Toggle
      .mobile-toggle {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        width: var(--target-size-max); // Use design system target size
        height: var(--target-size-max);
        padding: var(--space-2xs);
        background: none;
        border: none;
        cursor: pointer;
        z-index: 1001;
        margin-left: var(--space-xs); // Space from other elements
        border-radius: var(--radius-s); // Subtle rounding for better UX

        // Hide on desktop
        @media (min-width: 901px) {
          display: none;
        }

        // Hamburger lines
        .mobile-toggle-line {
          display: block;
          width: 24px;
          height: 2px;
          background: var(--nav-text);
          border-radius: 1px;
          transition: var(--nav-transition);
          margin: 2px 0;

          &:nth-child(1) {
            transform-origin: center;
          }

          &:nth-child(2) {
            transform-origin: center;
          }

          &:nth-child(3) {
            transform-origin: center;
          }
        }

        // Active state - X animation
        &.active {
          .mobile-toggle-line {
            &:nth-child(1) {
              transform: rotate(45deg) translate(5px, 5px);
            }

            &:nth-child(2) {
              opacity: 0;
            }

            &:nth-child(3) {
              transform: rotate(-45deg) translate(7px, -6px);
            }
          }
        }

        &:focus-visible {
          outline: 2px solid var(--nav-accent);
          outline-offset: 2px;
          border-radius: 4px;
        }
      }

      // Mobile Overlay & Menu
      .mobile-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100vh;
        background: var(--mobile-overlay-bg);
        z-index: 999;
        visibility: hidden;
        transition: var(--nav-transition);

        // Active state
        &.active {
          visibility: visible;
        }

        // Hide on desktop
        @media (min-width: 901px) {
          display: none;
        }
      }

      .mobile-menu {
        position: absolute;
        top: 0;
        right: 0;
        width: min(400px, 90vw);
        height: 100vh;
        background: white;
        border-left: 1px solid var(--nav-border);
        transform: translateX(100%);
        transition: var(--nav-transition);
        overflow-y: auto;

        // Slide in when active
        .mobile-overlay.active & {
          transform: translateX(0);
        }
      }

      .mobile-menu-header {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 1.5rem;
        border-bottom: 1px solid var(--nav-border);
      }

      .mobile-menu-content {
        padding: var(--space-m); // Use design system spacing
      }

      // Improved mobile links
      .mobile-link {
        display: flex;
        align-items: center;
        gap: var(--space-s);
        padding: var(--space-s) var(--space-m);
        color: var(--nav-text);
        text-decoration: none;
        border-radius: 9999px; // True pill shape
        transition: var(--nav-transition);
        font-weight: 500;
        margin-bottom: var(--space-xs);
        border: 1px solid transparent; // Prevents jumping

        &:hover,
        &:focus-visible {
          background: var(--brand-secondary);
          color: var(--nav-accent);
          border-color: rgba(0, 102, 204, 0.1);
        }

        // Improved mobile CTA
        &.mobile-cta {
          background: var(--nav-accent);
          color: white;
          margin-top: 1rem;
          border-color: var(--nav-accent);

          &:hover {
            background: var(--nav-text-hover);
            color: white;
            border-color: var(--nav-text-hover);
          }
        }

        // Better active state
        &.active {
          background: var(--nav-accent);
          color: white;
          font-weight: 600;
          border-color: var(--nav-accent);
        }
      }

      // Mobile Dropdown
      .mobile-dropdown {
        margin-bottom: var(--space-xs); // Design system spacing
      }

      // Improved mobile dropdown elements
      .mobile-dropdown-trigger {
        display: flex;
        align-items: center;
        justify-content: space-between;
        width: 100%;
        gap: var(--space-s); // Design system spacing
        padding: var(--space-s) var(--space-m); // Consistent padding
        color: var(--nav-text);
        background: none;
        border: 1px solid transparent;
        border-radius: 9999px; // True pill shape
        transition: var(--nav-transition);
        font-weight: 500;
        cursor: pointer;
        font-size: inherit;
        font-family: inherit;

        .mobile-dropdown-icon {
          transition: transform 0.2s ease;
        }

        &:hover {
          background: var(--brand-secondary);
          color: var(--nav-accent);
          border-color: rgba(0, 102, 204, 0.1);
        }
      }

      // Active dropdown state
      .mobile-dropdown.active {
        .mobile-dropdown-trigger {
          background: var(--brand-secondary);
          color: var(--nav-accent);

          .mobile-dropdown-icon {
            transform: rotate(180deg);
          }
        }

        .mobile-dropdown-content {
          max-height: 500px;
        }
      }

      .mobile-dropdown-content {
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.3s ease;
        padding-left: var(--space-l); // Design system spacing for indentation
      }

      .mobile-dropdown-link {
        display: block;
        padding: var(--space-xs) var(--space-m); // Design system spacing
        color: var(--nav-text);
        text-decoration: none;
        border-radius: 9999px; // True pill shape
        transition: var(--nav-transition);
        margin-bottom: var(--space-2xs); // Small spacing between dropdown items
        border: 1px solid transparent;

        &:hover,
        &:focus-visible {
          background: var(--brand-secondary);
          color: var(--nav-accent);
          border-color: rgba(0, 102, 204, 0.1);
        }
      }

      // Smooth scroll accounting for sticky nav
      html {
        scroll-padding-top: calc(var(--nav-height) + 2rem);
      }

      // Prevent layout shifts
      body {
        margin: 0;
      }

      // Reduced motion support
      @media (prefers-reduced-motion: reduce) {
        * {
          transition: none !important;
          animation: none !important;
        }
      }

      // High contrast support
      @media (prefers-contrast: high) {
        .hopkins-nav {
          border-bottom: 2px solid currentColor;
        }

        .dropdown-menu {
          border: 2px solid currentColor;
        }
      }

      // Print styles
      @media print {
        .hopkins-nav {
          position: static;
          box-shadow: none;
          background: white;
          border-bottom: 1px solid black;
        }

        .mobile-toggle,
        .nav-cta {
          display: none;
        }
      }
    </style>
  </nav>
</header>

<style lang="scss">
  // Navigation CSS variables - leveraging base design system
  :root {
    --nav-height: 80px;
    --nav-bg: transparent;
    --nav-bg-scrolled: transparent;
    --nav-shadow: none;
    --nav-shadow-scrolled: none;
    --nav-backdrop-blur: none;
    --nav-border: transparent;
    --nav-text: var(--foreground-color); // Uses base design system
    --nav-text-hover: var(--foreground-color);
    --nav-accent: var(--foreground-color);
    --nav-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --mobile-overlay-bg: rgba(0, 0, 0, 0.5);
    --dropdown-bg: #ffffff;
    --dropdown-shadow: 0 12px 48px rgba(0, 0, 0, 0.15);
  }

  // Sticky header container
  .hopkins-header {
    position: sticky;
    top: 0;
    z-index: 1000;
    width: 100%;
  }

  // Main navigation bar with scroll effects
  .hopkins-nav {
    width: 100%;
    background: var(--nav-bg);
    border-bottom: 1px solid transparent;
    transition: var(--nav-transition);
    min-height: var(--nav-height);
    position: relative;

    // Scrolled state styling - maintain transparency
    &.nav-scrolled {
      background: var(--nav-bg-scrolled);
      box-shadow: var(--nav-shadow-scrolled);
      border-bottom-color: transparent;

      // Apply hover state styling to nav links when scrolled
      .nav-link:not(.nav-cta) {
        background: var(--brand-secondary);
        color: var(--nav-text-hover);
      }

      // Keep CTA button styling consistent
      .nav-cta {
        background: var(--nav-accent);
        color: white;
      }

      // Hide scrolling text when scrolled - optimized for nav variant
      .nav-container .scrolling-text-container--nav {
        opacity: 0 !important;
        visibility: hidden !important;
        transform: translateY(-50%) translateY(-10px) !important;
        pointer-events: none !important;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
      }
    }
  }

  // Container with max-width and centering - matching main content grid system
  .nav-container {
    max-width: var(--grid-max-width);
    margin: 0 auto;
    padding-inline: var(--grid-gutter);
    padding-block: var(--space-xs); // Add vertical rhythm using design system
    display: flex;
    align-items: center;
    justify-content: space-between;
    min-height: var(--nav-height);
    position: relative;
    z-index: 2;

    // Responsive margin adjustments using design system breakpoints
    @media (min-width: 768px) {
      padding-inline: var(--space-l); // More space on larger screens
      padding-block: var(--space-s);
    }

    @media (min-width: 1024px) {
      padding-inline: var(--space-xl); // Maximum space on desktop
      padding-block: var(--space-m);
    }

    // Fix ScrollingText positioning in nav context with proper margins
    .scrolling-text-container--nav {
      position: absolute;
      top: 50%;
      left: var(--space-l); // Use design system spacing
      transform: translateY(-50%);
      z-index: 1; // Behind nav items but above background
      pointer-events: none;
      opacity: 0.6;
      width: calc(100% - var(--space-2xl)); // Proper responsive width
      max-width: 400px; // Prevent overlap with nav items
      margin-right: var(--space-xl); // Ensure clearance from nav menu

      // Responsive positioning adjustments
      @media (min-width: 768px) {
        left: var(--space-xl);
        width: calc(100% - var(--space-3xl));
        margin-right: var(--space-2xl);
      }

      @media (min-width: 1024px) {
        left: var(--space-2xl);
        width: calc(100% - var(--space-4xl));
        margin-right: var(--space-3xl);
      }

      // Override the default nav variant styles for better integration
      &:not(.hopkins-nav.nav-scrolled &) {
        // Only apply when not scrolled
        opacity: 0.6;
        visibility: visible;
      }

      // Hide on mobile to prevent overlap with hamburger menu
      @media (max-width: 900px) {
        display: none;
      }
    }
  }

  // Brand area containing both ScrollingText and Logo
  .nav-brand-area {
    position: relative;
    flex-shrink: 0;
    z-index: 1001;
    display: flex;
    align-items: center;
    min-height: 2.5rem; // Prevent layout shifts

    // On homepage when not scrolled, brand area takes available space for scrolling text
    .hopkins-nav.hopkins-nav--homepage:not(.nav-scrolled) & {
      flex: 1;
      max-width: 25%; // Limit to first quarter of header
      margin-right: var(--space-l); // Ensure clearance from nav

      @media (max-width: 900px) {
        display: none; // Hide ScrollingText on mobile
      }
    }

    // When scrolled or not on homepage, brand area is compact for logo
    .hopkins-nav.nav-scrolled &,
    .hopkins-nav:not(.hopkins-nav--homepage) & {
      flex: 0;
      max-width: none;
      margin-right: var(--space-m);
    }
  }

  // ScrollingText navigation variant
  .scrolling-text-nav {
    // Show by default on homepage when not scrolled
    opacity: 1;
    transition: var(--nav-transition);

    // Hide when scrolled or not on homepage
    .hopkins-nav.nav-scrolled &,
    .hopkins-nav:not(.hopkins-nav--homepage) & {
      opacity: 0;
      pointer-events: none;
    }

    // Ensure it doesn't interfere with logo positioning
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 100%;

    // Only show on homepage when not scrolled
    .hopkins-nav.hopkins-nav--homepage:not(.nav-scrolled) & {
      position: static;
      opacity: 1;
      pointer-events: auto;
    }
  }

  // Navigation Logo
  .nav-logo {
    transition: var(--nav-transition);
    position: relative;
    z-index: 2; // Above ScrollingText

    // Hidden state (homepage, not scrolled)
    &--hidden {
      opacity: 0;
      transform: scale(0.9);
      pointer-events: none;

      // Show when scrolled on homepage
      .hopkins-nav.nav-scrolled & {
        opacity: 1;
        transform: scale(1);
        pointer-events: auto;
      }
    }

    // Visible state (non-homepage or scrolled)
    &--visible {
      opacity: 1;
      transform: scale(1);
      pointer-events: auto;
    }
  }

  // Legacy nav-brand class (keeping for compatibility)
  .nav-brand {
    flex-shrink: 0;
    z-index: 1001;
  }

  // Navigation container - shows hamburger on mobile, navigation on desktop
  .nav-menu {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    position: relative;
    z-index: 3; // Above ScrollingText
    margin-left: auto; // Ensure right alignment
  }

  // Desktop navigation list - hidden on mobile
  .nav-list {
    display: none;

    @media (min-width: 901px) {
      display: flex;
      align-items: center;
      list-style: none;
      margin: 0;
      padding: 0;
      gap: var(--space-xs); // Use design system spacing for consistent gaps
      margin-left: auto; // Push to right side
      margin-right: var(--space-s); // Space from edge using design system
    }
  }

  .nav-item {
    position: relative;
    flex-shrink: 0;
  }

  // Special styling for CTA container
  .launch-cta {
    flex-shrink: 0;
    margin-left: 0.5rem;
  }

  // Base nav link styling - IMPROVED PILLS
  .nav-link {
    display: flex;
    align-items: center;
    gap: var(--space-s);
    padding: var(--space-xs) var(--space-m); // Slightly more horizontal padding
    color: var(--nav-text);
    text-decoration: none;
    font-weight: 500;
    border-radius: 9999px; // True pill shape instead of 50px
    transition: var(--nav-transition);
    background: transparent;
    border: 1px solid transparent; // Prevents size jumping on hover
    cursor: pointer;
    font-size: inherit;
    font-family: inherit;
    white-space: nowrap;
    margin: var(--space-2xs) 0;

    span {
      position: relative;
    }

    // Improved hover states
    &:hover,
    &:focus-visible {
      color: var(--nav-text-hover);
      background: var(--brand-secondary);
      border-color: rgba(255, 255, 255, 0.1); // Subtle border
    }

    // Active state with underline (keeping original behavior)
    &.active {
      color: var(--nav-accent);
      font-weight: 600;

      span::after {
        content: "";
        position: absolute;
        bottom: -4px;
        left: 0;
        right: 0;
        height: 2px;
        background: var(--nav-accent);
        border-radius: 1px;
      }
    }

    // Enhanced focus visibility
    &:focus-visible {
      outline: 2px solid var(--nav-accent);
      outline-offset: 2px;
    }
  }

  // CTA button styling - IMPROVED PILLS
  .nav-cta {
    background: var(--nav-accent);
    color: white;
    font-weight: 600;
    border-radius: 9999px; // True pill shape
    padding: var(--space-xs) var(--space-l) !important; // More generous padding
    flex-shrink: 0;
    margin-left: var(--space-s);
    border: 1px solid var(--nav-accent); // Consistent border

    &:hover,
    &:focus-visible {
      background: var(--nav-text-hover);
      color: white;
      transform: translateY(-1px);
      border-color: var(--nav-text-hover);
    }
  }

  // Dropdown Styles
  .nav-dropdown {
    // Hover and active states
    &:hover,
    &.active {
      .dropdown-trigger {
        color: var(--nav-accent);
        background: var(--brand-secondary); // Uses base design system
      }

      .dropdown-icon {
        transform: rotate(180deg);
      }

      .dropdown-menu {
        opacity: 1;
        visibility: visible;
        transform: translateY(0);
      }
    }
  }

  .dropdown-trigger {
    .dropdown-icon {
      transition: transform 0.2s ease;
    }
  }

  // Dropdown menu positioning and styling
  .dropdown-menu {
    position: absolute;
    top: calc(100% + 8px);
    left: 0;
    min-width: 280px;
    background: var(--dropdown-bg);
    backdrop-filter: var(--nav-backdrop-blur);
    -webkit-backdrop-filter: var(--nav-backdrop-blur);
    border-radius: var(--radius-l); // Use design system border radius
    box-shadow: var(--dropdown-shadow);
    border: 1px solid var(--nav-border);
    opacity: 0;
    visibility: hidden;
    transform: translateY(-8px);
    transition: var(--nav-transition);
    z-index: 1000;
  }

  .dropdown-content {
    padding: var(--space-xs); // Use design system spacing
  }

  // Improved dropdown links
  .dropdown-link {
    display: flex;
    align-items: center;
    gap: var(--space-s);
    padding: var(--space-xs) var(--space-m);
    color: var(--nav-text);
    text-decoration: none;
    border-radius: 9999px; // True pill shape
    transition: var(--nav-transition);
    font-weight: 500;
    border: 1px solid transparent; // Prevents jumping

    &:hover,
    &:focus-visible {
      background: var(--brand-secondary);
      color: var(--nav-accent);
      border-color: rgba(0, 102, 204, 0.1);
    }

    &:focus-visible {
      outline: 2px solid var(--nav-accent);
      outline-offset: 2px;
    }
  }

  // Mobile Toggle
  .mobile-toggle {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: var(--target-size-max); // Use design system target size
    height: var(--target-size-max);
    padding: var(--space-2xs);
    background: none;
    border: none;
    cursor: pointer;
    z-index: 1001;
    margin-left: var(--space-xs); // Space from other elements
    border-radius: var(--radius-s); // Subtle rounding for better UX

    // Hide on desktop
    @media (min-width: 901px) {
      display: none;
    }

    // Hamburger lines
    .mobile-toggle-line {
      display: block;
      width: 24px;
      height: 2px;
      background: var(--nav-text);
      border-radius: 1px;
      transition: var(--nav-transition);
      margin: 2px 0;

      &:nth-child(1) {
        transform-origin: center;
      }

      &:nth-child(2) {
        transform-origin: center;
      }

      &:nth-child(3) {
        transform-origin: center;
      }
    }

    // Active state - X animation
    &.active {
      .mobile-toggle-line {
        &:nth-child(1) {
          transform: rotate(45deg) translate(5px, 5px);
        }

        &:nth-child(2) {
          opacity: 0;
        }

        &:nth-child(3) {
          transform: rotate(-45deg) translate(7px, -6px);
        }
      }
    }

    &:focus-visible {
      outline: 2px solid var(--nav-accent);
      outline-offset: 2px;
      border-radius: 4px;
    }
  }

  // Mobile Overlay & Menu
  .mobile-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background: var(--mobile-overlay-bg);
    z-index: 999;
    visibility: hidden;
    transition: var(--nav-transition);

    // Active state
    &.active {
      visibility: visible;
    }

    // Hide on desktop
    @media (min-width: 901px) {
      display: none;
    }
  }

  .mobile-menu {
    position: absolute;
    top: 0;
    right: 0;
    width: min(400px, 90vw);
    height: 100vh;
    background: white;
    border-left: 1px solid var(--nav-border);
    transform: translateX(100%);
    transition: var(--nav-transition);
    overflow-y: auto;

    // Slide in when active
    .mobile-overlay.active & {
      transform: translateX(0);
    }
  }

  .mobile-menu-header {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1.5rem;
    border-bottom: 1px solid var(--nav-border);
  }

  .mobile-menu-content {
    padding: var(--space-m); // Use design system spacing
  }

  // Improved mobile links
  .mobile-link {
    display: flex;
    align-items: center;
    gap: var(--space-s);
    padding: var(--space-s) var(--space-m);
    color: var(--nav-text);
    text-decoration: none;
    border-radius: 9999px; // True pill shape
    transition: var(--nav-transition);
    font-weight: 500;
    margin-bottom: var(--space-xs);
    border: 1px solid transparent; // Prevents jumping

    &:hover,
    &:focus-visible {
      background: var(--brand-secondary);
      color: var(--nav-accent);
      border-color: rgba(0, 102, 204, 0.1);
    }

    // Improved mobile CTA
    &.mobile-cta {
      background: var(--nav-accent);
      color: white;
      margin-top: 1rem;
      border-color: var(--nav-accent);

      &:hover {
        background: var(--nav-text-hover);
        color: white;
        border-color: var(--nav-text-hover);
      }
    }

    // Better active state
    &.active {
      background: var(--nav-accent);
      color: white;
      font-weight: 600;
      border-color: var(--nav-accent);
    }
  }

  // Mobile Dropdown
  .mobile-dropdown {
    margin-bottom: var(--space-xs); // Design system spacing
  }

  // Improved mobile dropdown elements
  .mobile-dropdown-trigger {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    gap: var(--space-s); // Design system spacing
    padding: var(--space-s) var(--space-m); // Consistent padding
    color: var(--nav-text);
    background: none;
    border: 1px solid transparent;
    border-radius: 9999px; // True pill shape
    transition: var(--nav-transition);
    font-weight: 500;
    cursor: pointer;
    font-size: inherit;
    font-family: inherit;

    .mobile-dropdown-icon {
      transition: transform 0.2s ease;
    }

    &:hover {
      background: var(--brand-secondary);
      color: var(--nav-accent);
      border-color: rgba(0, 102, 204, 0.1);
    }
  }

  // Active dropdown state
  .mobile-dropdown.active {
    .mobile-dropdown-trigger {
      background: var(--brand-secondary);
      color: var(--nav-accent);

      .mobile-dropdown-icon {
        transform: rotate(180deg);
      }
    }

    .mobile-dropdown-content {
      max-height: 500px;
    }
  }

  .mobile-dropdown-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease;
    padding-left: var(--space-l); // Design system spacing for indentation
  }

  .mobile-dropdown-link {
    display: block;
    padding: var(--space-xs) var(--space-m); // Design system spacing
    color: var(--nav-text);
    text-decoration: none;
    border-radius: 9999px; // True pill shape
    transition: var(--nav-transition);
    margin-bottom: var(--space-2xs); // Small spacing between dropdown items
    border: 1px solid transparent;

    &:hover,
    &:focus-visible {
      background: var(--brand-secondary);
      color: var(--nav-accent);
      border-color: rgba(0, 102, 204, 0.1);
    }
  }

  // Smooth scroll accounting for sticky nav
  html {
    scroll-padding-top: calc(var(--nav-height) + 2rem);
  }

  // Prevent layout shifts
  body {
    margin: 0;
  }

  // Reduced motion support
  @media (prefers-reduced-motion: reduce) {
    * {
      transition: none !important;
      animation: none !important;
    }
  }

  // High contrast support
  @media (prefers-contrast: high) {
    .hopkins-nav {
      border-bottom: 2px solid currentColor;
    }

    .dropdown-menu {
      border: 2px solid currentColor;
    }
  }

  // Print styles
  @media print {
    .hopkins-nav {
      position: static;
      box-shadow: none;
      background: white;
      border-bottom: 1px solid black;
    }

    .mobile-toggle,
    .nav-cta {
      display: none;
    }
  }
</style>
