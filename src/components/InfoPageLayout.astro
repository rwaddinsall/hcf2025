---
import DefaultLayout from "../layouts/DefaultLayout.astro";
import PageHeader from "./PageHeader.astro";
import { Accordion, AccordionItem } from "accessible-astro-components";
import { Icon } from "astro-icon/components";
import { fetchInfoPageBySlug } from "../lib/strapi";

interface AccordionSection {
  title: string;
  details: any;
  category?: string;
}

interface Props {
  slug: string;
  backLink?: {
    href: string;
    text: string;
  };
  fallbackHeading?: string;
  fallbackSubheading?: string;
  fallbackAccordion?: AccordionSection[];
}

const {
  slug,
  backLink = { href: "/info", text: "Back to Festival Info" },
  fallbackHeading,
  fallbackSubheading,
  fallbackAccordion = [],
} = Astro.props;

// Fetch data from Strapi
let pageData: any = null;
let pageHeading = fallbackHeading || "Information";
let pageSubheading = fallbackSubheading || "";
let accordionSections = fallbackAccordion;

try {
  pageData = await fetchInfoPageBySlug(slug);
  console.log(
    "API Response for slug:",
    slug,
    "Data:",
    JSON.stringify(pageData, null, 2)
  );

  if (pageData) {
    pageHeading = pageData.heading || fallbackHeading || "Information";
    pageSubheading = pageData.subheading || fallbackSubheading || "";

    // Use accordion data directly from CMS
    if (pageData.accordion && pageData.accordion.length > 0) {
      accordionSections = pageData.accordion;
      console.log("Using CMS accordion data:", accordionSections);
    } else {
      console.log("No accordion data found in CMS response, using fallback");
    }
  } else {
    console.log("No pageData returned from API, using fallback");
  }
} catch (error) {
  console.warn(`Failed to fetch info page data for slug "${slug}":`, error);
  console.log("Using fallback accordion data:", fallbackAccordion);
  // Use fallback data
}
---

<DefaultLayout
  title={`${pageHeading} - Hopkins Creek Festival`}
  description={pageData?.metaDescription}
>
  <section class="my-12">
    <PageHeader title={pageHeading} subtitle={pageSubheading} />
  </section>

  <section class="my-12">
    <div class="container">
      <div class="space-content">
        <div class="mb-8">
          <a
            href={backLink.href}
            class="inline-flex items-center gap-2 text-primary-500 hover:text-primary-600"
          >
            <Icon name="lucide:arrow-left" size="20" />
            {backLink.text}
          </a>
        </div>

        {
          accordionSections && accordionSections.length > 0 && (
            <Accordion>
              {accordionSections.map((section: AccordionSection) => (
                <AccordionItem title={section.title}>
                  <div class="space-content">
                    <div set:html={section.details} />
                  </div>
                </AccordionItem>
              ))}
            </Accordion>
          )
        }

        <slot />
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  .space-content {
    h4 {
      font-weight: bold;
      margin-top: var(--space-m);
      margin-bottom: var(--space-s);
      color: var(--foreground-color);
    }

    ul {
      margin-bottom: var(--space-m);
    }

    li {
      margin-bottom: var(--space-2xs);
    }

    p {
      margin-bottom: var(--space-m);
      line-height: var(--line-height-relaxed);
      color: var(--foreground-color);

      &:last-child {
        margin-bottom: 0;
      }
    }

    .content-link {
      color: var(--link-color);
      text-decoration: underline;
      font-weight: 500;

      &:hover,
      &:focus-visible {
        color: var(--link-hover-color);
      }
    }
  }

  // Responsive adjustments
  @media (max-width: 48rem) {
    .space-content {
      padding: 0 var(--space-s);
    }
  }
</style>
