---
/**
 * Applications Page
 *
 * @description Applications information page that fetches content from Strapi
 * with comprehensive fallbacks for when content is not available
 */
import PageHeader from '../components/PageHeader.astro';
import DefaultLayout from '../layouts/DefaultLayout.astro';
import { Icon } from 'astro-icon/components';
import { Accordion, AccordionItem } from 'accessible-astro-components';
import { fetchSustainabilityPage } from '../lib/strapi';
import type { SustainabilityPage, AccordionComponent, PageHeaderComponent } from '../interfaces/strapi';

// Fetch sustainability page content from Strapi
let sustainabilityPageData: SustainabilityPage | null = null;

try {
  sustainabilityPageData = await fetchSustainabilityPage();
} catch (error) {
  console.warn(
    'Failed to fetch sustainability page content from static content. Using fallback content.',
    error instanceof Error ? error.message : String(error)
  );
  // Gracefully handle error - component will use fallback content
}

// Comprehensive fallback content
const fallbackContent: {
  Header: PageHeaderComponent;
  Body: { Content: string };
  Accordion: { accordions: { title: string; details: string; category: string }[] }[];
} = {
  Header: {
    id: 0,
    title: 'Sustainability',
    subheading:
      'Information about sustainability initiatives, eco-friendly practices, and community engagement.',
  },
  Body: {
    Content:
      'Find information about sustainability initiatives, eco-friendly practices, and community engagement at Hopkins Creek Festival.',
  },
  Accordion: [
    {
      accordions: [
        {
          title: 'Workshops (Deadline: Sept 23)',
          details: `<div class="space-content">
            <p>Apply to lead workshops and educational sessions at Hopkins Creek Festival.</p>
            <h4>Workshop Types:</h4>
            <ul class="list-disc list-inside">
              <li>Music production and recording</li>
              <li>Instrument building and repair</li>
              <li>Songwriting and composition</li>
              <li>Performance techniques</li>
              <li>Music business and industry</li>
            </ul>
            <h4>Application Requirements:</h4>
            <ul class="list-disc list-inside">
              <li>Detailed workshop description and objectives</li>
              <li>Biography and relevant experience</li>
              <li>Equipment and space requirements</li>
              <li>Expected participant capacity</li>
            </ul>
            <div class="p-4 mt-4 bg-red-50 rounded-lg border border-red-200">
              <p class="text-red-800">
                <strong>Deadline:</strong> All workshop applications must be submitted by September 23, 2025.
              </p>
            </div>
          </div>`,
          category: 'applications',
        },
        {
          title: 'Visual Artists (Deadline: Sept 23)',
          details: `<div class="space-content">
            <p>Join our visual arts program and showcase your work at the festival.</p>
            <h4>Art Categories:</h4>
            <ul class="list-disc list-inside">
              <li>Paintings and drawings</li>
              <li>Sculptures and installations</li>
              <li>Photography exhibitions</li>
              <li>Digital and multimedia art</li>
              <li>Craft and handmade goods</li>
            </ul>
            <h4>What We Provide:</h4>
            <ul class="list-disc list-inside">
              <li>Exhibition space in art village</li>
              <li>Basic display materials</li>
              <li>Security for artwork</li>
              <li>Promotional support</li>
            </ul>
            <div class="p-4 mt-4 bg-red-50 rounded-lg border border-red-200">
              <p class="text-red-800">
                <strong>Deadline:</strong> Visual artist applications close September 23, 2025.
              </p>
            </div>
          </div>`,
          category: 'applications',
        },
        {
          title: 'Volunteers (Closed)',
          details: `<div class="space-content">
            <p>Thank you for your interest in volunteering at Hopkins Creek Festival.</p>
            <div class="p-4 bg-gray-50 rounded-lg border border-gray-200">
              <p class="text-gray-800">
                <strong>Status:</strong> Volunteer applications for this year's festival are now closed. We have received an overwhelming response and have filled all available positions.
              </p>
            </div>
            <h4>Next Year:</h4>
            <ul class="list-disc list-inside">
              <li>Volunteer applications for 2026 will open in early 2025</li>
              <li>Join our mailing list to be notified when applications open</li>
              <li>Follow us on social media for updates</li>
            </ul>
            <h4>Volunteer Benefits (for future reference):</h4>
            <ul class="list-disc list-inside">
              <li>Free festival entry</li>
              <li>Volunteer t-shirt and merchandise</li>
              <li>Access to volunteer-only areas</li>
              <li>Meals during shifts</li>
              <li>Post-festival volunteer party</li>
            </ul>
          </div>`,
          category: 'applications',
        },
      ],
    },
  ],
};

// Use Strapi content if available, otherwise use fallback
const pageContent: SustainabilityPage | typeof fallbackContent = sustainabilityPageData || fallbackContent;
// SustainabilityPage.Header is optional and typed as an array in interfaces; handle both shapes
const headerData: PageHeaderComponent = Array.isArray((pageContent as SustainabilityPage).Header)
  ? ((pageContent as SustainabilityPage).Header?.[0] as PageHeaderComponent) || fallbackContent.Header
  : ((pageContent as any).Header as PageHeaderComponent) || fallbackContent.Header;

// SustainabilityPage uses Accordion (flat) in the interfaces, but our fallback uses grouped sections with accordions list
// Normalize to an array of sections with { accordions: AccordionComponent[] }
const faqData: { accordions: AccordionComponent[] }[] = ((): { accordions: AccordionComponent[] }[] => {
  if ((pageContent as SustainabilityPage).Accordion) {
    const acc = (pageContent as SustainabilityPage).Accordion as AccordionComponent[];
    return acc.length ? [{ accordions: acc }] : [];
  }
  return fallbackContent.Accordion as { accordions: AccordionComponent[] }[];
})();

// Ensure we have valid data with proper types
const pageTitle = headerData.title || 'Sustainability';
const pageSubtitle =
  headerData.subheading ||
  'Information about sustainability initiatives and practices at Hopkins Creek Festival.';
---

<DefaultLayout title="Sustainability - Hopkins Creek Festival">
  <section class="my-12">
    <PageHeader title={pageTitle} subtitle={pageSubtitle} />
  </section>

  <section class="my-12">
    <div class="container">
      <div class="space-content">
        <div class="mb-8">
          <a
            href="/info"
            class="inline-flex gap-2 items-center text-primary-500 hover:text-primary-600"
          >
            <Icon name="lucide:arrow-left" size="20" />
            Back to Festival Info
          </a>
        </div>

        <Accordion>
          {faqData.flatMap((section) =>
            (section.accordions || []).map((accordion: AccordionComponent) => (
              <AccordionItem title={accordion.title}>
                <div set:html={accordion.details} />
              </AccordionItem>
            ))
          )}
        </Accordion>
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  .space-content {
    h4 {
      font-weight: bold;
      margin-top: var(--space-m);
      margin-bottom: var(--space-s);
      color: var(--foreground-color);
    }

    ul {
      margin-bottom: var(--space-m);
    }

    li {
      margin-bottom: var(--space-2xs);
    }
  }

  // Apply Diatype Semi Mono font to accordion titles
  :global(.accordion h3),
  :global(.accordion summary h3) {
    font-family: "ABC Diatype Semi Mono", system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif !important;
    font-weight: 500 !important;
  }
</style>
